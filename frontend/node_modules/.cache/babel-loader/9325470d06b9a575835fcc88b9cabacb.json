{"ast":null,"code":"import { LoginService } from '../../services/LoginService';\nimport { storageService } from '../../services/storageService';\nimport { userService } from '../../services/usersService'; //creators\n\nconst _setUsers = users => ({\n  type: 'SET_USERS',\n  users\n});\n\nconst _getUser = user => ({\n  type: 'GET_USER',\n  user\n});\n\nconst _setUser = user => ({\n  type: 'SET_USER',\n  user\n});\n\nconst _setNetflixUser = nicknameLogin => ({\n  type: 'SET_NETFLIX_USER',\n  nicknameLogin\n}); // Dispatchers\n//THANK\n\n\nexport function loadUsers(nickname) {\n  return async dispatch => {\n    try {\n      const users = await userService.getUsers(nickname);\n      dispatch(_setUsers(users[0].profiles));\n    } catch (err) {\n      console.log('catch to get users!', err);\n    }\n  };\n}\nexport function getUser(userId) {\n  return dispatch => {\n    const user = userService.getUser(userId);\n    dispatch(_getUser(user));\n  };\n}\nexport function setUser(profileId) {\n  return async dispatch => {\n    const profile = await userService.getUser(profileId);\n    console.log('user is:', profile);\n    storageService.saveToStorage('User', profile);\n    dispatch(_setUser(profile));\n  };\n}\nexport function setNetflixUser(user) {\n  return async dispatch => {\n    const nicknameLogin = await LoginService.doLogin(user);\n    dispatch(_setNetflixUser(nicknameLogin));\n  };\n}","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/store/actions/UserAction.js"],"names":["LoginService","storageService","userService","_setUsers","users","type","_getUser","user","_setUser","_setNetflixUser","nicknameLogin","loadUsers","nickname","dispatch","getUsers","profiles","err","console","log","getUser","userId","setUser","profileId","profile","saveToStorage","setNetflixUser","doLogin"],"mappings":"AAAA,SAASA,YAAT,QAA6B,6BAA7B;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,WAAT,QAA4B,6BAA5B,C,CAGA;;AACA,MAAMC,SAAS,GAAIC,KAAD,KAAY;AAAEC,EAAAA,IAAI,EAAE,WAAR;AAAqBD,EAAAA;AAArB,CAAZ,CAAlB;;AACA,MAAME,QAAQ,GAAIC,IAAD,KAAW;AAAEF,EAAAA,IAAI,EAAE,UAAR;AAAoBE,EAAAA;AAApB,CAAX,CAAjB;;AACA,MAAMC,QAAQ,GAAID,IAAD,KAAW;AAAEF,EAAAA,IAAI,EAAE,UAAR;AAAoBE,EAAAA;AAApB,CAAX,CAAjB;;AACA,MAAME,eAAe,GAAIC,aAAD,KAAoB;AAAEL,EAAAA,IAAI,EAAE,kBAAR;AAA4BK,EAAAA;AAA5B,CAApB,CAAxB,C,CACA;AACA;;;AACA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAChC,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAI;AACA,YAAMT,KAAK,GAAG,MAAMF,WAAW,CAACY,QAAZ,CAAqBF,QAArB,CAApB;AACAC,MAAAA,QAAQ,CAACV,SAAS,CAACC,KAAK,CAAC,CAAD,CAAL,CAASW,QAAV,CAAV,CAAR;AACH,KAHD,CAIA,OAAOC,GAAP,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAnC;AACH;AACJ,GARD;AASH;AAED,OAAO,SAASG,OAAT,CAAiBC,MAAjB,EAAyB;AAC5B,SAAQP,QAAD,IAAc;AACjB,UAAMN,IAAI,GAAGL,WAAW,CAACiB,OAAZ,CAAoBC,MAApB,CAAb;AACAP,IAAAA,QAAQ,CAACP,QAAQ,CAACC,IAAD,CAAT,CAAR;AACH,GAHD;AAIH;AAED,OAAO,SAASc,OAAT,CAAiBC,SAAjB,EAA4B;AAC/B,SAAO,MAAOT,QAAP,IAAoB;AACvB,UAAMU,OAAO,GAAG,MAAMrB,WAAW,CAACiB,OAAZ,CAAoBG,SAApB,CAAtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,OAAxB;AACAtB,IAAAA,cAAc,CAACuB,aAAf,CAA6B,MAA7B,EAAqCD,OAArC;AACAV,IAAAA,QAAQ,CAACL,QAAQ,CAACe,OAAD,CAAT,CAAR;AACH,GALD;AAMH;AAED,OAAO,SAASE,cAAT,CAAwBlB,IAAxB,EAA8B;AACjC,SAAO,MAAMM,QAAN,IAAkB;AACrB,UAAMH,aAAa,GAAG,MAAMV,YAAY,CAAC0B,OAAb,CAAqBnB,IAArB,CAA5B;AACAM,IAAAA,QAAQ,CAACJ,eAAe,CAACC,aAAD,CAAhB,CAAR;AACH,GAHD;AAIH","sourcesContent":["import { LoginService } from '../../services/LoginService';\nimport { storageService } from '../../services/storageService';\nimport { userService } from '../../services/usersService';\n\n\n//creators\nconst _setUsers = (users) => ({ type: 'SET_USERS', users })\nconst _getUser = (user) => ({ type: 'GET_USER', user })\nconst _setUser = (user) => ({ type: 'SET_USER', user })\nconst _setNetflixUser = (nicknameLogin) => ({ type: 'SET_NETFLIX_USER', nicknameLogin })\n// Dispatchers\n//THANK\nexport function loadUsers(nickname) {\n    return async (dispatch) => {\n        try {\n            const users = await userService.getUsers(nickname)\n            dispatch(_setUsers(users[0].profiles))\n        }\n        catch (err) {\n            console.log('catch to get users!', err);\n        }\n    }\n}\n\nexport function getUser(userId) {\n    return (dispatch) => {\n        const user = userService.getUser(userId)\n        dispatch(_getUser(user))\n    }\n}\n\nexport function setUser(profileId) {\n    return async (dispatch) => {\n        const profile = await userService.getUser(profileId)\n        console.log('user is:', profile);\n        storageService.saveToStorage('User', profile)\n        dispatch(_setUser(profile))\n    }\n}\n\nexport function setNetflixUser(user) {\n    return async dispatch => {\n        const nicknameLogin = await LoginService.doLogin(user)\n        dispatch(_setNetflixUser(nicknameLogin))\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}