{"ast":null,"code":"import { storageService } from '../../services/storageService';\nimport { userService } from '../../services/usersService'; //creators\n\nconst _setUsers = users => ({\n  type: 'GET_USERS',\n  users\n});\n\nconst _getUser = user => ({\n  type: 'GET_USER',\n  user\n});\n\nconst _setUser = user => ({\n  type: 'SET_USER',\n  user\n}); // Dispatchers\n//THANK\n\n\nexport function loadUsers() {\n  return async dispatch => {\n    try {\n      const users = await userService.getUsers();\n      dispatch(_setUsers(users));\n    } catch (err) {\n      console.log('catch to get users!', err);\n    }\n  };\n}\nexport function getUser(userId) {\n  return dispatch => {\n    const user = userService.getUser(userId);\n    dispatch(_getUser(user));\n  };\n}\nexport function setUser(userId) {\n  return dispatch => {\n    const user = userService.getUser(userId);\n    storageService.saveToStorage('User', user);\n    dispatch(_setUser(user));\n  };\n}","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/store/actions/UserAction.js"],"names":["storageService","userService","_setUsers","users","type","_getUser","user","_setUser","loadUsers","dispatch","getUsers","err","console","log","getUser","userId","setUser","saveToStorage"],"mappings":"AAAA,SAASA,cAAT,QAA+B,+BAA/B;AACA,SAASC,WAAT,QAA4B,6BAA5B,C,CAGA;;AACA,MAAMC,SAAS,GAAIC,KAAD,KAAY;AAAEC,EAAAA,IAAI,EAAE,WAAR;AAAqBD,EAAAA;AAArB,CAAZ,CAAlB;;AACA,MAAME,QAAQ,GAAIC,IAAD,KAAW;AAAEF,EAAAA,IAAI,EAAE,UAAR;AAAoBE,EAAAA;AAApB,CAAX,CAAjB;;AACA,MAAMC,QAAQ,GAAID,IAAD,KAAW;AAAEF,EAAAA,IAAI,EAAE,UAAR;AAAoBE,EAAAA;AAApB,CAAX,CAAjB,C,CAEA;AACA;;;AACA,OAAO,SAASE,SAAT,GAAqB;AACxB,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAI;AACA,YAAMN,KAAK,GAAG,MAAMF,WAAW,CAACS,QAAZ,EAApB;AACAD,MAAAA,QAAQ,CAACP,SAAS,CAACC,KAAD,CAAV,CAAR;AACH,KAHD,CAIA,OAAOQ,GAAP,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAnC;AACH;AACJ,GARD;AASH;AAED,OAAO,SAASG,OAAT,CAAiBC,MAAjB,EAAyB;AAC5B,SAAQN,QAAD,IAAc;AACjB,UAAMH,IAAI,GAAGL,WAAW,CAACa,OAAZ,CAAoBC,MAApB,CAAb;AACAN,IAAAA,QAAQ,CAACJ,QAAQ,CAACC,IAAD,CAAT,CAAR;AACH,GAHD;AAIH;AAED,OAAO,SAASU,OAAT,CAAiBD,MAAjB,EAAyB;AAC5B,SAAQN,QAAD,IAAc;AACjB,UAAMH,IAAI,GAAGL,WAAW,CAACa,OAAZ,CAAoBC,MAApB,CAAb;AACAf,IAAAA,cAAc,CAACiB,aAAf,CAA6B,MAA7B,EAAqCX,IAArC;AACAG,IAAAA,QAAQ,CAACF,QAAQ,CAACD,IAAD,CAAT,CAAR;AACH,GAJD;AAKH","sourcesContent":["import { storageService } from '../../services/storageService';\nimport { userService } from '../../services/usersService';\n\n\n//creators\nconst _setUsers = (users) => ({ type: 'GET_USERS', users })\nconst _getUser = (user) => ({ type: 'GET_USER', user })\nconst _setUser = (user) => ({ type: 'SET_USER', user })\n\n// Dispatchers\n//THANK\nexport function loadUsers() {\n    return async (dispatch) => {\n        try {\n            const users = await userService.getUsers()\n            dispatch(_setUsers(users))\n        }\n        catch (err) {\n            console.log('catch to get users!', err);\n        }\n    }\n}\n\nexport function getUser(userId) {\n    return (dispatch) => {\n        const user = userService.getUser(userId)\n        dispatch(_getUser(user))\n    }\n}\n\nexport function setUser(userId) {\n    return (dispatch) => {\n        const user = userService.getUser(userId)\n        storageService.saveToStorage('User', user)\n        dispatch(_setUser(user))\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}