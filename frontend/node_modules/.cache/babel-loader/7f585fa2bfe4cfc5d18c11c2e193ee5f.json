{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/src/cmps/MoveiList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/original';\nexport function MoveiList({\n  title,\n  requests,\n  toggleModal,\n  idx,\n  getMovies\n}) {\n  _s();\n\n  const {\n    filterBy\n  } = useSelector(state => state.userModule);\n  const [movies, setMovies] = useState([]);\n  const [highRow, sethigtRow] = useState(false);\n  useEffect(async () => {\n    idx === 0 || idx === 3 ? sethigtRow(true) : sethigtRow(false);\n    const movies = await requests;\n    setMovies(movies);\n  }, []);\n  useEffect(() => {// getMovies(requests.title, requests.url, filterBy.Name)\n  }, [filterBy]);\n  console.log('movies is:', movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-movie\",\n      children: movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => toggleModal(movie),\n          className: `${highRow ? 'highRow' : 'lowerRow'}`,\n          src: `${BASE_URL_IMG}${highRow ? movie.poster_path : movie.backdrop_path}`,\n          alt: \"\"\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoveiList, \"VKZvITryIXAB9gw0jU/8AtBhY0U=\", false, function () {\n  return [useSelector];\n});\n\n_c = MoveiList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoveiList\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/cmps/MoveiList.jsx"],"names":["React","useEffect","useState","useSelector","BASE_URL_IMG","MoveiList","title","requests","toggleModal","idx","getMovies","filterBy","state","userModule","movies","setMovies","highRow","sethigtRow","console","log","map","movie","poster_path","backdrop_path","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,YAAY,GAAG,qCAArB;AAGA,OAAO,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,WAAnB;AAAgCC,EAAAA,GAAhC;AAAqCC,EAAAA;AAArC,CAAnB,EAAqE;AAAA;;AAExE,QAAM;AAAEC,IAAAA;AAAF,MAAeR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAAhC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AACjBQ,IAAAA,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,CAAtB,GAA2BQ,UAAU,CAAC,IAAD,CAArC,GAA8CA,UAAU,CAAC,KAAD,CAAxD;AACA,UAAMH,MAAM,GAAG,MAAMP,QAArB;AACAQ,IAAAA,SAAS,CAACD,MAAD,CAAT;AACH,GAJQ,EAIN,EAJM,CAAT;AAMAb,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,CAACU,QAAD,CAFM,CAAT;AAGAO,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,MAA1B;AAEA,sBACI;AAAA,4BACI;AAAA,gBAAIR;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKQ,MAAM,CAACM,GAAP,CAAWC,KAAK,IAAI;AACjB,4BAAO;AAEH,UAAA,OAAO,EAAE,MAAMb,WAAW,CAACa,KAAD,CAFvB;AAGH,UAAA,SAAS,EAAG,GAAEL,OAAO,GAAG,SAAH,GAAe,UAAW,EAH5C;AAIH,UAAA,GAAG,EAAG,GAAEZ,YAAa,GAAEY,OAAO,GAAGK,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aAAc,EAJtE;AAIyE,UAAA,GAAG,EAAC;AAJ7E,WACEF,KAAK,CAACG,EADR;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA/BenB,S;UAESF,W;;;KAFTE,S","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/original'\n\n\nexport function MoveiList({ title, requests, toggleModal, idx, getMovies }) {\n\n    const { filterBy } = useSelector(state => state.userModule)\n    const [movies, setMovies] = useState([])\n    const [highRow, sethigtRow] = useState(false)\n\n    useEffect(async () => {\n        (idx === 0 || idx === 3) ? sethigtRow(true) : sethigtRow(false)\n        const movies = await requests\n        setMovies(movies)\n    }, [])\n\n    useEffect(() => {\n        // getMovies(requests.title, requests.url, filterBy.Name)\n    }, [filterBy])\n    console.log('movies is:', movies);\n\n    return (\n        <div >\n            <p>{title}</p>\n            <div className=\"row-movie\">\n                {movies.map(movie => {\n                    return <img\n                        key={movie.id}\n                        onClick={() => toggleModal(movie)}\n                        className={`${highRow ? 'highRow' : 'lowerRow'}`}\n                        src={`${BASE_URL_IMG}${highRow ? movie.poster_path : movie.backdrop_path}`} alt=\"\" />\n                })}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}