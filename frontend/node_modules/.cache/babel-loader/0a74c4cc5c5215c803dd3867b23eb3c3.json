{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/src/pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Banner } from '../cmps/Banner.jsx';\nimport { MoveiList } from '../cmps/MoveiList.jsx';\nimport { NavBar } from '../cmps/NavBar.jsx';\nimport { ModalMovie } from '../cmps/ModalMovie';\nimport { moveiService } from '../services/movieService';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { storageService } from '../services/storageService.js';\nimport { setUser } from '../store/actions/UserAction.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Home() {\n  _s();\n\n  const {\n    user,\n    filterBy\n  } = useSelector(state => state.userModule);\n  const [movieModal, setMovieModal] = useState({});\n  const [openModal, setOpenModal] = useState(false);\n  const [requests, setRequests] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    if (!user) {\n      var userFromStorge = storageService.loadFromStorage('User');\n      return userFromStorge; // history.push('/')\n      // return console.log('user is:', user);\n    }\n\n    getRequests();\n  }, [history, user]);\n  useEffect(() => {\n    setFilterOnMovies({ ...filterBy\n    });\n  }, [filterBy]);\n\n  function getRequests() {\n    const requests = moveiService.getRequests();\n    setRequests(requests);\n  }\n\n  async function setFilterOnMovies(title, url, filterBy) {// const movies = await moveiService.getMovies(title, url, filterBy)\n  }\n\n  const changeProfile = profile => {\n    console.log('userId is:', profile);\n    storageService.saveToStorage('profile', profile);\n    setUser(profile);\n  };\n\n  function toggleModal(movie) {\n    setMovieModal(movie);\n    setOpenModal(!openModal);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      changeProfile: changeProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bgc-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-container\",\n        children: requests.map((req, idx) => {\n          return /*#__PURE__*/_jsxDEV(MoveiList, {\n            idx: idx // getMovies={getMovies}\n            ,\n            toggleModal: toggleModal // title={req.title}\n            ,\n            request: req\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), openModal && /*#__PURE__*/_jsxDEV(ModalMovie, {\n      movie: movieModal,\n      setOpenModal: setOpenModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), openModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => toggleModal(false),\n      className: \"screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"uvgfqVWk+q070EzT8q4LD+q9K9w=\", false, function () {\n  return [useSelector, useHistory];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/pages/Home.jsx"],"names":["React","useEffect","useState","Banner","MoveiList","NavBar","ModalMovie","moveiService","useSelector","useHistory","storageService","setUser","Home","user","filterBy","state","userModule","movieModal","setMovieModal","openModal","setOpenModal","requests","setRequests","history","userFromStorge","loadFromStorage","getRequests","setFilterOnMovies","title","url","changeProfile","profile","console","log","saveToStorage","toggleModal","movie","map","req","idx"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Banner } from '../cmps/Banner.jsx'\nimport { MoveiList } from '../cmps/MoveiList.jsx'\nimport { NavBar } from '../cmps/NavBar.jsx'\nimport { ModalMovie } from '../cmps/ModalMovie'\nimport { moveiService } from '../services/movieService'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { storageService } from '../services/storageService.js'\nimport { setUser } from '../store/actions/UserAction.js'\n\nexport function Home() {\n\n    const { user, filterBy } = useSelector(state => state.userModule)\n\n    const [movieModal, setMovieModal] = useState({})\n    const [openModal, setOpenModal] = useState(false)\n    const [requests, setRequests] = useState([])\n    const history = useHistory()\n\n\n    useEffect(() => {\n        if (!user) {\n            var userFromStorge = storageService.loadFromStorage('User')\n            return userFromStorge\n            // history.push('/')\n            // return console.log('user is:', user);\n        }\n        getRequests()\n\n    }, [history, user])\n\n    useEffect(() => {\n        setFilterOnMovies({ ...filterBy });\n    }, [filterBy])\n\n    function getRequests() {\n        const requests = moveiService.getRequests()\n        setRequests(requests)\n    }\n\n\n\n    async function setFilterOnMovies(title, url, filterBy) {\n        // const movies = await moveiService.getMovies(title, url, filterBy)\n    }\n    const changeProfile = (profile) => {\n        console.log('userId is:', profile);\n        storageService.saveToStorage('profile', profile)\n        setUser(profile)\n\n    }\n\n    function toggleModal(movie) {\n        setMovieModal(movie)\n        setOpenModal(!openModal)\n    }\n\n    return (\n        <div className=\"home-page\">\n            <NavBar changeProfile={changeProfile} />\n            <div >\n                <Banner />\n                <div className=\"bgc-black\">\n                </div>\n                <div className=\"row-container\">\n                    {requests.map((req, idx) => {\n                        return <MoveiList\n                            key={idx}\n                            idx={idx}\n                            // getMovies={getMovies}\n                            toggleModal={toggleModal}\n                            // title={req.title}\n                            request={req}\n                        />\n                    })}\n                </div>\n\n            </div>\n\n            {openModal &&\n                <ModalMovie movie={movieModal} setOpenModal={setOpenModal} />\n            }\n            {openModal && <div onClick={() => toggleModal(false)} className=\"screen\"></div>}\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}