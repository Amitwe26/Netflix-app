{"ast":null,"code":"import axios from \"axios\";\nimport { storageService } from \"./storageService\";\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst KEY_WORD = 'movies';\nconst API_KEY = '966d25f68b2beabae673d956bfe0476d';\nconst requests = [{\n  title: 'Trending',\n  url: `/trending/all/week?api_key=${API_KEY}&language=en-US`\n}, {\n  title: 'Top Rated',\n  url: `/movie/top_rated?api_key=${API_KEY}&language=en-US`\n}, {\n  title: 'Action Movies',\n  url: `/discover/movie?api_key=${API_KEY}&with_genres=28`\n}, {\n  title: 'Netflix Originals',\n  url: `/discover/tv?api_key=${API_KEY}&with_networks=213`\n}, {\n  title: 'Most popular ',\n  url: `/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc`\n}, {\n  title: 'Comedy Movies',\n  url: `/discover/movie?api_key=${API_KEY}&with_genres=35`\n}, {\n  title: 'Documentaries',\n  url: `/discover/movie?api_key=${API_KEY}&with_genres=99`\n}, {\n  title: 'Horror Movies',\n  url: `/discover/movie?api_key=${API_KEY}&with_genres=27`\n}, {\n  title: 'Drama Movies',\n  url: `/discover/movie?api_key=${API_KEY}&with_genres=18`\n}, {\n  title: 'Tom Cruise',\n  url: `/discover/movie?api_key=${API_KEY}&with_genres=878`\n}];\n\nasync function query() {\n  // const res = await axios.get('https://api.themoviedb.org/3/list/1?api_key=966d25f68b2beabae673d956bfe0476d')\n  // const movies = res.data\n  // storageService.saveToStorage(KEY_WORD, res.data)\n  const movies = storageService.loadFromStorage(KEY_WORD);\n  return movies;\n}\n\nfunction getRequests() {\n  return requests;\n}\n\nasync function getMovies(title, fetch, filterBy) {\n  console.log('title,fetch,filterBy is:', title, fetch, filterBy);\n  const moviesLists = storageService.loadFromStorage(title);\n\n  if (filterBy !== '') {\n    console.log('filterBy tair is:', moviesLists, filterBy);\n    const moviesFilter = moviesLists.filter(movie => {\n      if (movie.name) return movie.name.toLowerCase().includes(filterBy.toLowerCase());else return movie.title.toLowerCase().includes(filterBy.toLowerCase());\n    });\n    console.log('moviesFilter is:', moviesFilter); // console.log('movies after filter is:', moviesFilter);\n    // return moviesFilter\n    // return Promise.resolve(moviesFilter)\n  } else if (moviesLists) return moviesLists;else {\n    const req = await axios.get(`https://api.themoviedb.org/3${fetch}`);\n    const movies = req.data.results;\n    storageService.saveToStorage(title, movies);\n    console.log('movies is:', movies);\n    return movies;\n  }\n}\n\nfunction _loadMovies() {\n  const movies = storageService.loadFromStorage(KEY_WORD);\n}\n\nexport const moveiService = {\n  query,\n  getMovies,\n  getRequests\n};","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/services/movieService.js"],"names":["axios","storageService","BASE_URL","KEY_WORD","API_KEY","requests","title","url","query","movies","loadFromStorage","getRequests","getMovies","fetch","filterBy","console","log","moviesLists","moviesFilter","filter","movie","name","toLowerCase","includes","req","get","data","results","saveToStorage","_loadMovies","moveiService"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport { storageService } from \"./storageService\"\n\n\nconst BASE_URL = 'https://api.themoviedb.org/'\nconst KEY_WORD = 'movies'\n\n\nconst API_KEY = '966d25f68b2beabae673d956bfe0476d'\n\n\nconst requests = [\n\n    { title: 'Trending', url: `/trending/all/week?api_key=${API_KEY}&language=en-US` },\n    { title: 'Top Rated', url: `/movie/top_rated?api_key=${API_KEY}&language=en-US` },\n    { title: 'Action Movies', url: `/discover/movie?api_key=${API_KEY}&with_genres=28` },\n    { title: 'Netflix Originals', url: `/discover/tv?api_key=${API_KEY}&with_networks=213` },\n    { title: 'Most popular ', url: `/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc` },\n    { title: 'Comedy Movies', url: `/discover/movie?api_key=${API_KEY}&with_genres=35` },\n    { title: 'Documentaries', url: `/discover/movie?api_key=${API_KEY}&with_genres=99` },\n    { title: 'Horror Movies', url: `/discover/movie?api_key=${API_KEY}&with_genres=27` },\n    { title: 'Drama Movies', url: `/discover/movie?api_key=${API_KEY}&with_genres=18` },\n    { title: 'Tom Cruise', url: `/discover/movie?api_key=${API_KEY}&with_genres=878` },\n]\n\n\nasync function query() {\n    // const res = await axios.get('https://api.themoviedb.org/3/list/1?api_key=966d25f68b2beabae673d956bfe0476d')\n    // const movies = res.data\n    // storageService.saveToStorage(KEY_WORD, res.data)\n    const movies = storageService.loadFromStorage(KEY_WORD)\n    return movies\n}\nfunction getRequests() {\n    return requests\n}\n\nasync function getMovies(title, fetch, filterBy) {\n    console.log('title,fetch,filterBy is:', title, fetch, filterBy);\n    const moviesLists = storageService.loadFromStorage(title)\n    if (filterBy !== '') {\n        console.log('filterBy tair is:', moviesLists, filterBy);\n        const moviesFilter = moviesLists.filter(movie => {\n            if (movie.name) return movie.name.toLowerCase().includes(filterBy.toLowerCase())\n            else return movie.title.toLowerCase().includes(filterBy.toLowerCase())\n        })\n        console.log('moviesFilter is:', moviesFilter);\n        // console.log('movies after filter is:', moviesFilter);\n        // return moviesFilter\n        // return Promise.resolve(moviesFilter)\n    }\n    else if (moviesLists) return moviesLists\n    else {\n        const req = await axios.get(`https://api.themoviedb.org/3${fetch}`)\n        const movies = req.data.results\n        storageService.saveToStorage(title, movies)\n        console.log('movies is:', movies);\n\n        return movies\n    }\n}\nfunction _loadMovies() {\n    const movies = storageService.loadFromStorage(KEY_WORD)\n\n}\n\nexport const moveiService = {\n    query,\n    getMovies,\n    getRequests\n}"]},"metadata":{},"sourceType":"module"}