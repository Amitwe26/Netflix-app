{"ast":null,"code":"import { LoginService } from '../../services/LoginService';\nimport { storageService } from '../../services/storageService';\nimport { userService } from '../../services/usersService'; //creators\n\nconst _setProfiles = users => ({\n  type: 'SET_USERS',\n  users\n});\n\nconst _getUser = user => ({\n  type: 'GET_USER',\n  user\n});\n\nconst _setProfile = profile => ({\n  type: 'SET_PROFILE',\n  profile\n});\n\nconst _setNetflixUser = userLogin => ({\n  type: 'SET_NETFLIX_USER',\n  userLogin\n}); // Dispatchers\n//THANK\n\n\nexport function loadProfiles(user) {\n  return async dispatch => {\n    try {\n      const profiles = await userService.getProfiles(user);\n      dispatch(_setProfiles(profiles));\n    } catch (err) {\n      console.log('catch to get profiles!', err);\n    }\n  };\n}\nexport function getUser(userId) {\n  return dispatch => {\n    const user = userService.getUser(userId);\n    dispatch(_getUser(user));\n  };\n} // export function changeActiveProfile(profile, users) {\n//     return (dispatch) => {\n//         storageService.saveToStorage('profile', profile)\n//         dispatch(_getUser(profile))\n//     }\n// }\n\nexport function setProfile(profile) {\n  return async dispatch => {\n    try {\n      storageService.saveToStorage('profile', profile);\n      dispatch(_setProfile(profile));\n    } catch (err) {\n      console.log('err to set profile is:', err);\n    }\n  };\n}\nexport function setNetflixUser(user) {\n  return async dispatch => {\n    try {\n      const userLogin = await userService.login(user);\n\n      if (userLogin) {\n        dispatch(_setNetflixUser(userLogin));\n        return userLogin;\n      }\n    } catch (err) {\n      console.log('err to set user is:', err);\n    }\n  };\n}\nexport function signup(userCreds) {\n  return async dispatch => {\n    try {\n      const user = await userService.signup(userCreds);\n      console.log('user in action is:', user);\n    } catch {\n      console.log('failed to signup ');\n    }\n  };\n}","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/frontend/src/store/actions/UserAction.js"],"names":["LoginService","storageService","userService","_setProfiles","users","type","_getUser","user","_setProfile","profile","_setNetflixUser","userLogin","loadProfiles","dispatch","profiles","getProfiles","err","console","log","getUser","userId","setProfile","saveToStorage","setNetflixUser","login","signup","userCreds"],"mappings":"AAAA,SAASA,YAAT,QAA6B,6BAA7B;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,WAAT,QAA4B,6BAA5B,C,CAGA;;AACA,MAAMC,YAAY,GAAIC,KAAD,KAAY;AAAEC,EAAAA,IAAI,EAAE,WAAR;AAAqBD,EAAAA;AAArB,CAAZ,CAArB;;AACA,MAAME,QAAQ,GAAIC,IAAD,KAAW;AAAEF,EAAAA,IAAI,EAAE,UAAR;AAAoBE,EAAAA;AAApB,CAAX,CAAjB;;AACA,MAAMC,WAAW,GAAIC,OAAD,KAAc;AAAEJ,EAAAA,IAAI,EAAE,aAAR;AAAuBI,EAAAA;AAAvB,CAAd,CAApB;;AACA,MAAMC,eAAe,GAAIC,SAAD,KAAgB;AAAEN,EAAAA,IAAI,EAAE,kBAAR;AAA4BM,EAAAA;AAA5B,CAAhB,CAAxB,C,CACA;AACA;;;AACA,OAAO,SAASC,YAAT,CAAsBL,IAAtB,EAA4B;AAC/B,SAAO,MAAOM,QAAP,IAAoB;AACvB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMZ,WAAW,CAACa,WAAZ,CAAwBR,IAAxB,CAAvB;AACAM,MAAAA,QAAQ,CAACV,YAAY,CAACW,QAAD,CAAb,CAAR;AACH,KAHD,CAIA,OAAOE,GAAP,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,GAAtC;AACH;AACJ,GARD;AASH;AAED,OAAO,SAASG,OAAT,CAAiBC,MAAjB,EAAyB;AAC5B,SAAQP,QAAD,IAAc;AACjB,UAAMN,IAAI,GAAGL,WAAW,CAACiB,OAAZ,CAAoBC,MAApB,CAAb;AACAP,IAAAA,QAAQ,CAACP,QAAQ,CAACC,IAAD,CAAT,CAAR;AACH,GAHD;AAIH,C,CACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASc,UAAT,CAAoBZ,OAApB,EAA6B;AAChC,SAAO,MAAOI,QAAP,IAAoB;AACvB,QAAI;AACAZ,MAAAA,cAAc,CAACqB,aAAf,CAA6B,SAA7B,EAAwCb,OAAxC;AACAI,MAAAA,QAAQ,CAACL,WAAW,CAACC,OAAD,CAAZ,CAAR;AACH,KAHD,CAIA,OAAOO,GAAP,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,GAAtC;AACH;AACJ,GARD;AASH;AAED,OAAO,SAASO,cAAT,CAAwBhB,IAAxB,EAA8B;AACjC,SAAO,MAAMM,QAAN,IAAkB;AACrB,QAAI;AAEA,YAAMF,SAAS,GAAG,MAAMT,WAAW,CAACsB,KAAZ,CAAkBjB,IAAlB,CAAxB;;AACA,UAAII,SAAJ,EAAe;AACXE,QAAAA,QAAQ,CAACH,eAAe,CAACC,SAAD,CAAhB,CAAR;AACA,eAAOA,SAAP;AACH;AACJ,KAPD,CAQA,OAAOK,GAAP,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAnC;AACH;AACJ,GAZD;AAaH;AAED,OAAO,SAASS,MAAT,CAAgBC,SAAhB,EAA2B;AAC9B,SAAO,MAAMb,QAAN,IAAkB;AACrB,QAAI;AACA,YAAMN,IAAI,GAAG,MAAML,WAAW,CAACuB,MAAZ,CAAmBC,SAAnB,CAAnB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCX,IAAlC;AACH,KAHD,CAIA,MAAM;AACFU,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,GARD;AASH","sourcesContent":["import { LoginService } from '../../services/LoginService';\nimport { storageService } from '../../services/storageService';\nimport { userService } from '../../services/usersService';\n\n\n//creators\nconst _setProfiles = (users) => ({ type: 'SET_USERS', users })\nconst _getUser = (user) => ({ type: 'GET_USER', user })\nconst _setProfile = (profile) => ({ type: 'SET_PROFILE', profile })\nconst _setNetflixUser = (userLogin) => ({ type: 'SET_NETFLIX_USER', userLogin })\n// Dispatchers\n//THANK\nexport function loadProfiles(user) {\n    return async (dispatch) => {\n        try {\n            const profiles = await userService.getProfiles(user)\n            dispatch(_setProfiles(profiles))\n        }\n        catch (err) {\n            console.log('catch to get profiles!', err);\n        }\n    }\n}\n\nexport function getUser(userId) {\n    return (dispatch) => {\n        const user = userService.getUser(userId)\n        dispatch(_getUser(user))\n    }\n}\n// export function changeActiveProfile(profile, users) {\n//     return (dispatch) => {\n//         storageService.saveToStorage('profile', profile)\n//         dispatch(_getUser(profile))\n//     }\n// }\n\nexport function setProfile(profile) {\n    return async (dispatch) => {\n        try {\n            storageService.saveToStorage('profile', profile)\n            dispatch(_setProfile(profile))\n        }\n        catch (err) {\n            console.log('err to set profile is:', err);\n        }\n    }\n}\n\nexport function setNetflixUser(user) {\n    return async dispatch => {\n        try {\n\n            const userLogin = await userService.login(user)\n            if (userLogin) {\n                dispatch(_setNetflixUser(userLogin))\n                return userLogin\n            }\n        }\n        catch (err) {\n            console.log('err to set user is:', err);\n        }\n    }\n}\n\nexport function signup(userCreds) {\n    return async dispatch => {\n        try {\n            const user = await userService.signup(userCreds)\n            console.log('user in action is:', user);\n        }\n        catch {\n            console.log('failed to signup ');\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}