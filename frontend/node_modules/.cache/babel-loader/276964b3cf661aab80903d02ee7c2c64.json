{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/src/pages/Profiles.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { userService } from '../services/usersService'; // import { Link } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setProfile, loadProfiles } from '../store/actions/UserAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Profiles() {\n  _s();\n\n  const {\n    profiles,\n    nicknameUser\n  } = useSelector(state => state.userModule);\n  const history = useHistory();\n  const [edit, setEdit] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadProfiles(nicknameUser));\n  }, [nicknameUser, dispatch, profiles]);\n\n  async function chackUser(userId, nicknameUser) {\n    console.log('userId is:', userId);\n    const infoUser = {\n      userId,\n      nicknameUser\n    };\n    dispatch(setProfile(infoUser));\n    history.push('/user');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"nav-logo\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"How watch in Netflix?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-users\",\n        children: profiles === null || profiles === void 0 ? void 0 : profiles.map(profile => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: profile.color,\n              onClick: () => chackUser(profile._id, nicknameUser),\n              alt: \"img user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), edit && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-edit\",\n              children: \"\\u270E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: profile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, profile._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: edit ? '#ffff' : '',\n          color: edit ? 'black' : ''\n        },\n        onClick: () => setEdit(!edit),\n        children: edit ? 'Done' : 'Edit profile'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profiles, \"nAPrDTXoIna+zZTKTHmVsHTEItA=\", false, function () {\n  return [useSelector, useHistory, useDispatch];\n});\n\n_c = Profiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/pages/Profiles.jsx"],"names":["React","useEffect","useState","userService","useDispatch","useSelector","useHistory","setProfile","loadProfiles","Profiles","profiles","nicknameUser","state","userModule","history","edit","setEdit","dispatch","chackUser","userId","console","log","infoUser","push","map","profile","color","_id","name","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,0BAA5B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,6BAAzC;;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AAEvB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAA9C;AACA,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMe,QAAQ,GAAGb,WAAW,EAA5B;AAGAH,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,QAAQ,CAACT,YAAY,CAACG,YAAD,CAAb,CAAR;AAEH,GAHQ,EAGN,CAACA,YAAD,EAAeM,QAAf,EAAyBP,QAAzB,CAHM,CAAT;;AAMA,iBAAeQ,SAAf,CAAyBC,MAAzB,EAAiCR,YAAjC,EAA+C;AAC3CS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,MAA1B;AACA,UAAMG,QAAQ,GAAG;AAAEH,MAAAA,MAAF;AAAUR,MAAAA;AAAV,KAAjB;AACAM,IAAAA,QAAQ,CAACV,UAAU,CAACe,QAAD,CAAX,CAAR;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAa,OAAb;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAC,2EAA9B;AAA0G,MAAA,GAAG,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACKb,QADL,aACKA,QADL,uBACKA,QAAQ,CAAEc,GAAV,CAAcC,OAAO,IAAI;AACtB,8BAAO;AACH,YAAA,SAAS,EAAC,MADP;AAAA,oCAGH;AAAK,cAAA,GAAG,EAAEA,OAAO,CAACC,KAAlB;AACI,cAAA,OAAO,EAAE,MAAMR,SAAS,CAACO,OAAO,CAACE,GAAT,EAAchB,YAAd,CAD5B;AAEI,cAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,oBAHG,EAOFI,IAAI,iBAAI;AAAQ,cAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPN,eAQH;AAAA,wBAAIU,OAAO,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,oBARG;AAAA,aAEEH,OAAO,CAACE,GAFV;AAAA;AAAA;AAAA;AAAA,kBAAP;AAUH,SAXA;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ,eAiBI;AACI,QAAA,KAAK,EAAE;AACHE,UAAAA,eAAe,EAAEd,IAAI,GAAG,OAAH,GAAa,EAD/B;AAEHW,UAAAA,KAAK,EAAEX,IAAI,GAAG,OAAH,GAAa;AAFrB,SADX;AAKI,QAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,CAACD,IAAF,CAL1B;AAAA,kBAMKA,IAAI,GAAG,MAAH,GAAY;AANrB;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GArDeN,Q;UAEuBJ,W,EACnBC,U,EAGCF,W;;;KANLK,Q","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { userService } from '../services/usersService'\n// import { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { setProfile, loadProfiles } from '../store/actions/UserAction'\n\nexport function Profiles() {\n\n    const { profiles, nicknameUser } = useSelector(state => state.userModule)\n    const history = useHistory()\n\n    const [edit, setEdit] = useState(false)\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n        dispatch(loadProfiles(nicknameUser));\n\n    }, [nicknameUser, dispatch, profiles])\n\n\n    async function chackUser(userId, nicknameUser) {\n        console.log('userId is:', userId);\n        const infoUser = { userId, nicknameUser }\n        dispatch(setProfile(infoUser))\n        history.push('/user')\n    }\n\n    return (\n        <div className=\"profile-page\">\n            <img className=\"nav-logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"\" />\n            <div className=\"main-profile\">\n                <h1>How watch in Netflix?</h1>\n\n                <div className=\"main-users\">\n                    {profiles?.map(profile => {\n                        return <div\n                            className=\"user\"\n                            key={profile._id}>\n                            <img src={profile.color}\n                                onClick={() => chackUser(profile._id, nicknameUser)}\n                                alt=\"img user\" />\n\n                            {edit && <button className=\"btn-edit\">âœŽ</button>}\n                            <p>{profile.name}</p>\n                        </div>\n                    })}\n                </div>\n                <button\n                    style={{\n                        backgroundColor: edit ? '#ffff' : '',\n                        color: edit ? 'black' : ''\n                    }}\n                    onClick={() => setEdit(!edit)}>\n                    {edit ? 'Done' : 'Edit profile'}\n                </button>\n            </div>\n        </div >\n    )\n}\n"]},"metadata":{},"sourceType":"module"}