{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/frontend/src/pages/Profiles.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import { userService } from '../services/usersService'\n// import { Link } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setProfile, loadProfiles } from '../store/actions/UserAction';\nimport { ProfilePreview } from '../cmps/ProfilePreview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Profiles() {\n  _s();\n\n  const {\n    profiles,\n    userLogin\n  } = useSelector(state => state.userModule);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [edit, setEdit] = useState(false);\n  const [addProfile, setAddProfile] = useState(false);\n  useEffect(() => {\n    dispatch(loadProfiles(userLogin));\n  }, [userLogin, dispatch]);\n\n  async function onSetProfile(profile) {\n    dispatch(setProfile(profile));\n    history.push('/user');\n  }\n\n  function onLogout() {\n    sessionStorage.clear();\n    history.push('/');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"nav-logo\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-logout\",\n      onClick: () => onLogout(),\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"How watch in Netflix?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setAddProfile(true),\n        children: \"Add profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), addProfile && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-users\",\n        children: profiles === null || profiles === void 0 ? void 0 : profiles.map(profile => {\n          return /*#__PURE__*/_jsxDEV(ProfilePreview, {\n            profile: profile,\n            onSetProfile: onSetProfile,\n            userLogin: userLogin,\n            edit: edit\n          }, profile.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: edit ? '#ffff' : '',\n          color: edit ? 'black' : ''\n        },\n        onClick: () => setEdit(!edit),\n        children: edit ? 'Done' : 'Edit profile'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profiles, \"PZyPCaPkJQpVylMyAH8Av3ARaj0=\", false, function () {\n  return [useSelector, useHistory, useDispatch];\n});\n\n_c = Profiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/frontend/src/pages/Profiles.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","setProfile","loadProfiles","ProfilePreview","Profiles","profiles","userLogin","state","userModule","history","dispatch","edit","setEdit","addProfile","setAddProfile","onSetProfile","profile","push","onLogout","sessionStorage","clear","map","name","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import { userService } from '../services/usersService'\n// import { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { setProfile, loadProfiles } from '../store/actions/UserAction'\nimport { ProfilePreview } from '../cmps/ProfilePreview'\n\n\nexport function Profiles() {\n\n    const { profiles, userLogin } = useSelector(state => state.userModule)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const [edit, setEdit] = useState(false)\n    const [addProfile, setAddProfile] = useState(false)\n\n\n    useEffect(() => {\n        dispatch(loadProfiles(userLogin));\n    }, [userLogin, dispatch])\n\n\n    async function onSetProfile(profile) {\n        dispatch(setProfile(profile))\n        history.push('/user')\n    }\n\n    function onLogout() {\n        sessionStorage.clear()\n        history.push('/')\n    }\n\n    return (\n        <div className=\"profile-page\">\n            <img className=\"nav-logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"\" />\n            <button className=\"btn-logout\" onClick={() => onLogout()}>Logout</button>\n            <div className=\"main-profile\">\n                <h1>How watch in Netflix?</h1>\n                <button onClick={setAddProfile(true)}>Add profile</button>\n                {addProfile && <div>\n\n                </div>}\n                <div className=\"main-users\">\n                    {profiles?.map(profile => {\n                        return (\n                            <ProfilePreview\n                                key={profile.name}\n                                profile={profile}\n                                onSetProfile={onSetProfile}\n                                userLogin={userLogin}\n                                edit={edit} />)\n                    })}\n                </div>\n                <button\n                    style={{\n                        backgroundColor: edit ? '#ffff' : '',\n                        color: edit ? 'black' : ''\n                    }}\n                    onClick={() => setEdit(!edit)}>\n                    {edit ? 'Done' : 'Edit profile'}\n                </button>\n            </div>\n        </div >\n    )\n}\n"]},"metadata":{},"sourceType":"module"}