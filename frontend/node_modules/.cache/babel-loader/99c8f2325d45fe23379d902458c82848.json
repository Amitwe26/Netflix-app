{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/src/cmps/NavBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { storageService } from '../services/storageService';\nimport { getUser } from '../store/actions/UserAction';\nimport { UsersModal } from './UsersModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NavBar() {\n  _s();\n\n  const {\n    user,\n    users\n  } = useSelector(state => state.userModule);\n  const dispatch = useDispatch();\n  const [scroll, setscroll] = useState(false);\n  const [usersModal, setUsersModal] = useState(false);\n  const inputRef = useRef(null);\n  const history = useHistory();\n  useEffect(() => {\n    window.addEventListener('scroll', showNav);\n    inputRef.current.focus();\n    return () => window.removeEventListener('scroll', showNav);\n  }, []);\n  useEffect(async () => {\n    const user = await storageService.loadFromStorage('User');\n    console.log('user', user);\n    dispatch(getUser(user._id));\n  }, []);\n\n  const showNav = () => {\n    if (window.scrollY > 30) setscroll(true);else setscroll(false);\n  };\n\n  const filterUsers = userId => {\n    const newUsers = users.filter(user => user._id !== userId);\n    return newUsers;\n  };\n\n  function toggleHoverMouse() {\n    console.log('amit is:');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `nav-bar ${scroll ? 'nav-black' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => history.push('/'),\n          className: \"nav-logo\",\n          src: \"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \" Home page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \" TV shows \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \" Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \" News & Popular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \" My list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex align-center right-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          className: \"filterMovies\",\n          type: \"text\",\n          placeholder: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => setUsersModal(!usersModal) // onMouseEnter={() => setUsersModal(!usersModal)}\n          // onMouseOut={() => toggleHoverMouse(false)}\n          ,\n          className: \"user-avatar\",\n          src: user.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setUsersModal(!usersModal),\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), usersModal && /*#__PURE__*/_jsxDEV(UsersModal, {\n        users: filterUsers(user._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 32\n      }, this), usersModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setUsersModal(false),\n        className: \"screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NavBar, \"zFN0+HJ1qM9X0XvkVs3ZstEVGdQ=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/cmps/NavBar.jsx"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","useHistory","storageService","getUser","UsersModal","NavBar","user","users","state","userModule","dispatch","scroll","setscroll","usersModal","setUsersModal","inputRef","history","window","addEventListener","showNav","current","focus","removeEventListener","loadFromStorage","console","log","_id","scrollY","filterUsers","userId","newUsers","filter","toggleHoverMouse","push","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { storageService } from '../services/storageService'\nimport { getUser } from '../store/actions/UserAction'\nimport { UsersModal } from './UsersModal'\n\nexport function NavBar() {\n    const { user, users } = useSelector(state => state.userModule)\n    const dispatch = useDispatch()\n\n    const [scroll, setscroll] = useState(false)\n    const [usersModal, setUsersModal] = useState(false)\n    const inputRef = useRef(null)\n    const history = useHistory()\n\n    useEffect(() => {\n        window.addEventListener('scroll', showNav)\n        inputRef.current.focus()\n        return () => window.removeEventListener('scroll', showNav)\n    }, [])\n\n    useEffect(async () => {\n        const user = await storageService.loadFromStorage('User')\n        console.log('user', user);\n        dispatch(getUser(user._id))\n    }, [])\n\n    const showNav = () => {\n        if (window.scrollY > 30) setscroll(true)\n        else setscroll(false)\n    }\n\n    const filterUsers = (userId) => {\n        const newUsers = users.filter(user => user._id !== userId)\n        return newUsers\n    }\n    function toggleHoverMouse() {\n        console.log('amit is:');\n    }\n    return (\n        <div className={`nav-bar ${(scroll) ? 'nav-black' : ''}`}>\n            <div className=\"nav-content\">\n                <div className=\"left-nav\">\n                    <img\n                        onClick={() => history.push('/')}\n                        className=\"nav-logo\"\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\n                        alt=\"\"\n                    />\n                    <a > Home page</a>\n                    <a > TV shows </a>\n                    <a > Movies</a>\n                    <a > News & Popular</a>\n                    <a > My list</a>\n                </div>\n                <div className=\"flex align-center right-nav\">\n                    <input ref={inputRef} className=\"filterMovies\" type=\"text\" placeholder=\"search\" />\n                    <img\n                        onClick={() => setUsersModal(!usersModal)}\n                        // onMouseEnter={() => setUsersModal(!usersModal)}\n                        // onMouseOut={() => toggleHoverMouse(false)}\n                        className=\"user-avatar\"\n                        src={user.color}\n                    />\n                    <span onClick={() => setUsersModal(!usersModal)}>▼</span>\n\n                </div>\n                {usersModal && <UsersModal users={filterUsers(user._id)} />}\n                {usersModal && <div onClick={() => setUsersModal(false)} className=\"screen\"></div>}\n            </div>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}