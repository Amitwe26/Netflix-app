{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/src/cmps/MoveiList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { moveiService } from '../services/movieService';\nimport { setMovies } from '../store/actions/MovieAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/original';\nexport function MoveiList({\n  request,\n  toggleModal,\n  idx\n}) {\n  _s();\n\n  // const { movies } = useSelector(state => state.moviesModule)\n  const {\n    filterBy\n  } = useSelector(state => state.userModule); // const dispatch = useDispatch()\n\n  const [movies, setMovies] = useState([]);\n  const [highRow, sethigtRow] = useState(false);\n  useEffect(() => {\n    getMovies();\n\n    if (movies) {\n      idx === 0 || idx === 3 ? sethigtRow(true) : sethigtRow(false);\n    }\n  }, [Request]);\n  useEffect(() => {// getMovies(requests.title, requests.url, filterBy.Name)\n  }, [filterBy]);\n\n  async function getMovies() {\n    const {\n      title,\n      url\n    } = request; // dispatch(setMovies(title, url))\n\n    let movies = await moveiService.getMovies(title, url);\n    setMovies(movies);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: request.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-movie\",\n      children: movies === null || movies === void 0 ? void 0 : movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => toggleModal(movie),\n          className: `${highRow ? 'highRow' : 'lowerRow'}`,\n          src: `${BASE_URL_IMG}${highRow ? movie.poster_path : movie.backdrop_path}`,\n          alt: \"\"\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoveiList, \"VKZvITryIXAB9gw0jU/8AtBhY0U=\", false, function () {\n  return [useSelector];\n});\n\n_c = MoveiList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoveiList\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/cmps/MoveiList.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","moveiService","setMovies","BASE_URL_IMG","MoveiList","request","toggleModal","idx","filterBy","state","userModule","movies","highRow","sethigtRow","getMovies","Request","title","url","map","movie","poster_path","backdrop_path","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,SAAT,QAA0B,8BAA1B;;AAEA,MAAMC,YAAY,GAAG,qCAArB;AAGA,OAAO,SAASC,SAAT,CAAmB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA;AAAxB,CAAnB,EAAkD;AAAA;;AAErD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAAhC,CAHqD,CAIrD;;AAEA,QAAM,CAACC,MAAD,EAAST,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,SAAS;;AACT,QAAIH,MAAJ,EAAY;AACPJ,MAAAA,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,CAAtB,GAA2BM,UAAU,CAAC,IAAD,CAArC,GAA8CA,UAAU,CAAC,KAAD,CAAxD;AAEH;AACJ,GANQ,EAMN,CAACE,OAAD,CANM,CAAT;AAQAlB,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,CAACW,QAAD,CAFM,CAAT;;AAIA,iBAAeM,SAAf,GAA2B;AACvB,UAAM;AAAEE,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiBZ,OAAvB,CADuB,CAEvB;;AACA,QAAIM,MAAM,GAAG,MAAMV,YAAY,CAACa,SAAb,CAAuBE,KAAvB,EAA8BC,GAA9B,CAAnB;AACAf,IAAAA,SAAS,CAACS,MAAD,CAAT;AACH;;AAED,sBACI;AAAA,4BACI;AAAA,gBAAIN,OAAO,CAACW;AAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKL,MADL,aACKA,MADL,uBACKA,MAAM,CAAEO,GAAR,CAAYC,KAAK,IAAI;AAClB,4BAAO;AAEH,UAAA,OAAO,EAAE,MAAMb,WAAW,CAACa,KAAD,CAFvB;AAGH,UAAA,SAAS,EAAG,GAAEP,OAAO,GAAG,SAAH,GAAe,UAAW,EAH5C;AAIH,UAAA,GAAG,EAAG,GAAET,YAAa,GAAES,OAAO,GAAGO,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aAAc,EAJtE;AAIyE,UAAA,GAAG,EAAC;AAJ7E,WACEF,KAAK,CAACG,EADR;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA1CelB,S;UAGSJ,W;;;KAHTI,S","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { moveiService } from '../services/movieService'\nimport { setMovies } from '../store/actions/MovieAction'\n\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/original'\n\n\nexport function MoveiList({ request, toggleModal, idx }) {\n\n    // const { movies } = useSelector(state => state.moviesModule)\n    const { filterBy } = useSelector(state => state.userModule)\n    // const dispatch = useDispatch()\n\n    const [movies, setMovies] = useState([])\n    const [highRow, sethigtRow] = useState(false)\n\n    useEffect(() => {\n        getMovies()\n        if (movies) {\n            (idx === 0 || idx === 3) ? sethigtRow(true) : sethigtRow(false)\n\n        }\n    }, [Request])\n\n    useEffect(() => {\n        // getMovies(requests.title, requests.url, filterBy.Name)\n    }, [filterBy])\n\n    async function getMovies() {\n        const { title, url } = request\n        // dispatch(setMovies(title, url))\n        let movies = await moveiService.getMovies(title, url)\n        setMovies(movies)\n    }\n\n    return (\n        <div >\n            <p>{request.title}</p>\n            <div className=\"row-movie\">\n                {movies?.map(movie => {\n                    return <img\n                        key={movie.id}\n                        onClick={() => toggleModal(movie)}\n                        className={`${highRow ? 'highRow' : 'lowerRow'}`}\n                        src={`${BASE_URL_IMG}${highRow ? movie.poster_path : movie.backdrop_path}`} alt=\"\" />\n                })}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}