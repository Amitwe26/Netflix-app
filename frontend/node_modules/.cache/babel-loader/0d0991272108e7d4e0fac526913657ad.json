{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/src/cmps/FilterMovie.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../store/actions/MovieAction'; // import moviesReducer from '../store/reducers/MoviesReducer'\n// import { initialstateMovies } from '../store/reducers/MoviesReducer'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialstateMovies = {\n  filterByName: null\n};\nexport default function filterReducer(state, action) {\n  console.log('action is:', action.filterByName);\n\n  switch (action.type) {\n    case 'FILTER_BY':\n      return { ...state,\n        filterByName: action.filterByName\n      };\n\n    default:\n      return state;\n  }\n}\nexport function FilterMovie() {\n  _s();\n\n  const inputRef = useRef(null); // const dispatch = useDispatch()\n\n  const [state, dispatch] = useReducer(filterReducer, initialstateMovies);\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n  useEffect(() => {\n    console.log('{...state} is:', { ...state\n    });\n    dispatch(setFilter({ ...state\n    })); // onSetFilter({ ...state })\n  }, [state]);\n\n  function consol(ev) {\n    dispatch({\n      type: 'FILTER_BY',\n      filterByName: ev.target.value\n    });\n  }\n\n  const {\n    filterByName\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      className: \"filterMovies\",\n      type: \"text\",\n      value: filterByName,\n      onChange: ev => consol(ev),\n      placeholder: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FilterMovie, \"33SSu3uJC6qPt6Fic2OFwhJ6Mjc=\");\n\n_c = FilterMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterMovie\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/cmps/FilterMovie.jsx"],"names":["React","useEffect","useReducer","useRef","useDispatch","setFilter","initialstateMovies","filterByName","filterReducer","state","action","console","log","type","FilterMovie","inputRef","dispatch","current","focus","consol","ev","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,8BAA1B,C,CAEA;AACA;;;AACA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,YAAY,EAAE;AADS,CAA3B;AAGA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,MAAM,CAACH,YAAjC;;AACA,UAAQG,MAAM,CAACG,IAAf;AACI,SAAK,WAAL;AACI,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,YAAY,EAAEG,MAAM,CAACH;AAFlB,OAAP;;AAIJ;AAAS,aAAOE,KAAP;AANb;AASH;AACD,OAAO,SAASK,WAAT,GAAuB;AAAA;;AAC1B,QAAMC,QAAQ,GAAGZ,MAAM,CAAC,IAAD,CAAvB,CAD0B,CAE1B;;AAEA,QAAM,CAACM,KAAD,EAAQO,QAAR,IAAoBd,UAAU,CAACM,aAAD,EAAgBF,kBAAhB,CAApC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACH,GAFQ,EAEN,EAFM,CAAT;AAGAjB,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,EAAE,GAAGH;AAAL,KAA9B;AACAO,IAAAA,QAAQ,CAACX,SAAS,CAAC,EAAE,GAAGI;AAAL,KAAD,CAAV,CAAR,CAFY,CAIZ;AACH,GALQ,EAKN,CAACA,KAAD,CALM,CAAT;;AAMA,WAASU,MAAT,CAAgBC,EAAhB,EAAoB;AAEhBJ,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE,WAAR;AAAqBN,MAAAA,YAAY,EAAEa,EAAE,CAACC,MAAH,CAAUC;AAA7C,KAAD,CAAR;AACH;;AACD,QAAM;AAAEf,IAAAA;AAAF,MAAmBE,KAAzB;AACA,sBACI;AAAA,2BACI;AAAO,MAAA,GAAG,EAAEM,QAAZ;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,IAAI,EAAC,MAFT;AAEgB,MAAA,KAAK,EAAER,YAFvB;AAGI,MAAA,QAAQ,EAAGa,EAAD,IAAQD,MAAM,CAACC,EAAD,CAH5B;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA9BeN,W;;KAAAA,W","sourcesContent":["import React, { useEffect, useReducer, useRef } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../store/actions/MovieAction'\n\n// import moviesReducer from '../store/reducers/MoviesReducer'\n// import { initialstateMovies } from '../store/reducers/MoviesReducer'\nconst initialstateMovies = {\n    filterByName: null\n}\nexport default function filterReducer(state, action) {\n    console.log('action is:', action.filterByName);\n    switch (action.type) {\n        case 'FILTER_BY':\n            return {\n                ...state,\n                filterByName: action.filterByName\n            }\n        default: return state\n\n    }\n}\nexport function FilterMovie() {\n    const inputRef = useRef(null)\n    // const dispatch = useDispatch()\n\n    const [state, dispatch] = useReducer(filterReducer, initialstateMovies)\n\n    useEffect(() => {\n        inputRef.current.focus()\n    }, [])\n    useEffect(() => {\n        console.log('{...state} is:', { ...state });\n        dispatch(setFilter({ ...state }))\n\n        // onSetFilter({ ...state })\n    }, [state])\n    function consol(ev) {\n\n        dispatch({ type: 'FILTER_BY', filterByName: ev.target.value })\n    }\n    const { filterByName } = state\n    return (\n        <div>\n            <input ref={inputRef}\n                className=\"filterMovies\"\n                type=\"text\" value={filterByName}\n                onChange={(ev) => consol(ev)}\n                placeholder=\"search\" />\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}