{"ast":null,"code":"import { LoginService } from '../../services/LoginService';\nimport { storageService } from '../../services/storageService';\nimport { userService } from '../../services/usersService'; //creators\n\nconst _setUsers = users => ({\n  type: 'GET_USERS',\n  users\n});\n\nconst _getUser = user => ({\n  type: 'GET_USER',\n  user\n});\n\nconst _setUser = user => ({\n  type: 'SET_USER',\n  user\n});\n\nconst _setNetflixUser = netflixUser => ({\n  type: 'SET_NETFLIX_USER',\n  netflixUser\n}); // Dispatchers\n//THANK\n\n\nexport function loadUsers(netflix) {\n  return async dispatch => {\n    try {\n      console.log('NETFLIXiD is:', netflix);\n      const users = await userService.getUsers(netflix.nickname);\n      console.log('users is:', users.profiles);\n      dispatch(_setUsers(users));\n    } catch (err) {\n      console.log('catch to get users!', err);\n    }\n  };\n}\nexport function getUser(userId) {\n  return dispatch => {\n    const user = userService.getUser(userId);\n    dispatch(_getUser(user));\n  };\n}\nexport function setUser(userId) {\n  return dispatch => {\n    const user = userService.getUser(userId);\n    storageService.saveToStorage('User', user);\n    dispatch(_setUser(user));\n  };\n}\nexport function setNetflixUser(user) {\n  return dispatch => {\n    const netflixUser = LoginService.doLogin(user);\n    dispatch(_setNetflixUser(netflixUser));\n  };\n}","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/store/actions/UserAction.js"],"names":["LoginService","storageService","userService","_setUsers","users","type","_getUser","user","_setUser","_setNetflixUser","netflixUser","loadUsers","netflix","dispatch","console","log","getUsers","nickname","profiles","err","getUser","userId","setUser","saveToStorage","setNetflixUser","doLogin"],"mappings":"AAAA,SAASA,YAAT,QAA6B,6BAA7B;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,WAAT,QAA4B,6BAA5B,C,CAGA;;AACA,MAAMC,SAAS,GAAIC,KAAD,KAAY;AAAEC,EAAAA,IAAI,EAAE,WAAR;AAAqBD,EAAAA;AAArB,CAAZ,CAAlB;;AACA,MAAME,QAAQ,GAAIC,IAAD,KAAW;AAAEF,EAAAA,IAAI,EAAE,UAAR;AAAoBE,EAAAA;AAApB,CAAX,CAAjB;;AACA,MAAMC,QAAQ,GAAID,IAAD,KAAW;AAAEF,EAAAA,IAAI,EAAE,UAAR;AAAoBE,EAAAA;AAApB,CAAX,CAAjB;;AACA,MAAME,eAAe,GAAIC,WAAD,KAAkB;AAAEL,EAAAA,IAAI,EAAE,kBAAR;AAA4BK,EAAAA;AAA5B,CAAlB,CAAxB,C,CACA;AACA;;;AACA,OAAO,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AAC/B,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,OAA7B;AACA,YAAMR,KAAK,GAAG,MAAMF,WAAW,CAACc,QAAZ,CAAqBJ,OAAO,CAACK,QAA7B,CAApB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBX,KAAK,CAACc,QAA/B;AACAL,MAAAA,QAAQ,CAACV,SAAS,CAACC,KAAD,CAAV,CAAR;AACH,KALD,CAMA,OAAOe,GAAP,EAAY;AACRL,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCI,GAAnC;AACH;AACJ,GAVD;AAWH;AAED,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAC5B,SAAQR,QAAD,IAAc;AACjB,UAAMN,IAAI,GAAGL,WAAW,CAACkB,OAAZ,CAAoBC,MAApB,CAAb;AACAR,IAAAA,QAAQ,CAACP,QAAQ,CAACC,IAAD,CAAT,CAAR;AACH,GAHD;AAIH;AAED,OAAO,SAASe,OAAT,CAAiBD,MAAjB,EAAyB;AAC5B,SAAQR,QAAD,IAAc;AACjB,UAAMN,IAAI,GAAGL,WAAW,CAACkB,OAAZ,CAAoBC,MAApB,CAAb;AACApB,IAAAA,cAAc,CAACsB,aAAf,CAA6B,MAA7B,EAAqChB,IAArC;AACAM,IAAAA,QAAQ,CAACL,QAAQ,CAACD,IAAD,CAAT,CAAR;AACH,GAJD;AAKH;AAED,OAAO,SAASiB,cAAT,CAAwBjB,IAAxB,EAA8B;AACjC,SAAOM,QAAQ,IAAI;AACf,UAAMH,WAAW,GAAGV,YAAY,CAACyB,OAAb,CAAqBlB,IAArB,CAApB;AACAM,IAAAA,QAAQ,CAACJ,eAAe,CAACC,WAAD,CAAhB,CAAR;AACH,GAHD;AAIH","sourcesContent":["import { LoginService } from '../../services/LoginService';\nimport { storageService } from '../../services/storageService';\nimport { userService } from '../../services/usersService';\n\n\n//creators\nconst _setUsers = (users) => ({ type: 'GET_USERS', users })\nconst _getUser = (user) => ({ type: 'GET_USER', user })\nconst _setUser = (user) => ({ type: 'SET_USER', user })\nconst _setNetflixUser = (netflixUser) => ({ type: 'SET_NETFLIX_USER', netflixUser })\n// Dispatchers\n//THANK\nexport function loadUsers(netflix) {\n    return async (dispatch) => {\n        try {\n            console.log('NETFLIXiD is:', netflix);\n            const users = await userService.getUsers(netflix.nickname)\n            console.log('users is:', users.profiles);\n            dispatch(_setUsers(users))\n        }\n        catch (err) {\n            console.log('catch to get users!', err);\n        }\n    }\n}\n\nexport function getUser(userId) {\n    return (dispatch) => {\n        const user = userService.getUser(userId)\n        dispatch(_getUser(user))\n    }\n}\n\nexport function setUser(userId) {\n    return (dispatch) => {\n        const user = userService.getUser(userId)\n        storageService.saveToStorage('User', user)\n        dispatch(_setUser(user))\n    }\n}\n\nexport function setNetflixUser(user) {\n    return dispatch => {\n        const netflixUser = LoginService.doLogin(user)\n        dispatch(_setNetflixUser(netflixUser))\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}