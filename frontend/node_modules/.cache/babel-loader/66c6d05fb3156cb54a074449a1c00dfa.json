{"ast":null,"code":"import { LoginService } from '../../services/LoginService';\nimport { storageService } from '../../services/storageService';\nimport { userService } from '../../services/usersService'; //creators\n\nconst _setUsers = users => ({\n  type: 'GET_USERS',\n  users\n});\n\nconst _getUser = user => ({\n  type: 'GET_USER',\n  user\n});\n\nconst _setUser = user => ({\n  type: 'SET_USER',\n  user\n});\n\nconst _setNetflixUser = nicknameLogin => ({\n  type: 'SET_NETFLIX_USER',\n  nicknameLogin\n}); // Dispatchers\n//THANK\n\n\nexport function loadUsers(netflixId) {\n  return dispatch => {\n    try {\n      console.log('NETFLIXiD is:', netflixId.id);\n      const users = userService.getUsers(netflixId);\n      console.log('users is:', users);\n      dispatch(_setUsers(users));\n    } catch (err) {\n      console.log('catch to get users!', err);\n    }\n  };\n}\nexport function getUser(userId) {\n  return dispatch => {\n    const user = userService.getUser(userId);\n    dispatch(_getUser(user));\n  };\n}\nexport function setUser(userId) {\n  return dispatch => {\n    const user = userService.getUser(userId);\n    storageService.saveToStorage('User', user);\n    dispatch(_setUser(user));\n  };\n}\nexport function setNetflixUser(user) {\n  console.log('user444 is:', user);\n  return async dispatch => {\n    const nicknameLogin = await LoginService.doLogin(user);\n    console.log('netflixUser is:', nicknameLogin);\n    dispatch(_setNetflixUser(nicknameLogin));\n  };\n}","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/store/actions/UserAction.js"],"names":["LoginService","storageService","userService","_setUsers","users","type","_getUser","user","_setUser","_setNetflixUser","nicknameLogin","loadUsers","netflixId","dispatch","console","log","id","getUsers","err","getUser","userId","setUser","saveToStorage","setNetflixUser","doLogin"],"mappings":"AAAA,SAASA,YAAT,QAA6B,6BAA7B;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,WAAT,QAA4B,6BAA5B,C,CAGA;;AACA,MAAMC,SAAS,GAAIC,KAAD,KAAY;AAAEC,EAAAA,IAAI,EAAE,WAAR;AAAqBD,EAAAA;AAArB,CAAZ,CAAlB;;AACA,MAAME,QAAQ,GAAIC,IAAD,KAAW;AAAEF,EAAAA,IAAI,EAAE,UAAR;AAAoBE,EAAAA;AAApB,CAAX,CAAjB;;AACA,MAAMC,QAAQ,GAAID,IAAD,KAAW;AAAEF,EAAAA,IAAI,EAAE,UAAR;AAAoBE,EAAAA;AAApB,CAAX,CAAjB;;AACA,MAAME,eAAe,GAAIC,aAAD,KAAoB;AAAEL,EAAAA,IAAI,EAAE,kBAAR;AAA4BK,EAAAA;AAA5B,CAApB,CAAxB,C,CACA;AACA;;;AACA,OAAO,SAASC,SAAT,CAAmBC,SAAnB,EAA8B;AACjC,SAAQC,QAAD,IAAc;AACjB,QAAI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,SAAS,CAACI,EAAvC;AACA,YAAMZ,KAAK,GAAGF,WAAW,CAACe,QAAZ,CAAqBL,SAArB,CAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBX,KAAzB;AACAS,MAAAA,QAAQ,CAACV,SAAS,CAACC,KAAD,CAAV,CAAR;AACH,KALD,CAMA,OAAOc,GAAP,EAAY;AACRJ,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCG,GAAnC;AACH;AACJ,GAVD;AAWH;AAED,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAC5B,SAAQP,QAAD,IAAc;AACjB,UAAMN,IAAI,GAAGL,WAAW,CAACiB,OAAZ,CAAoBC,MAApB,CAAb;AACAP,IAAAA,QAAQ,CAACP,QAAQ,CAACC,IAAD,CAAT,CAAR;AACH,GAHD;AAIH;AAED,OAAO,SAASc,OAAT,CAAiBD,MAAjB,EAAyB;AAC5B,SAAQP,QAAD,IAAc;AACjB,UAAMN,IAAI,GAAGL,WAAW,CAACiB,OAAZ,CAAoBC,MAApB,CAAb;AACAnB,IAAAA,cAAc,CAACqB,aAAf,CAA6B,MAA7B,EAAqCf,IAArC;AACAM,IAAAA,QAAQ,CAACL,QAAQ,CAACD,IAAD,CAAT,CAAR;AACH,GAJD;AAKH;AAED,OAAO,SAASgB,cAAT,CAAwBhB,IAAxB,EAA8B;AACjCO,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BR,IAA3B;AACA,SAAO,MAAMM,QAAN,IAAkB;AACrB,UAAMH,aAAa,GAAG,MAAMV,YAAY,CAACwB,OAAb,CAAqBjB,IAArB,CAA5B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,aAA/B;AACAG,IAAAA,QAAQ,CAACJ,eAAe,CAACC,aAAD,CAAhB,CAAR;AACH,GAJD;AAKH","sourcesContent":["import { LoginService } from '../../services/LoginService';\nimport { storageService } from '../../services/storageService';\nimport { userService } from '../../services/usersService';\n\n\n//creators\nconst _setUsers = (users) => ({ type: 'GET_USERS', users })\nconst _getUser = (user) => ({ type: 'GET_USER', user })\nconst _setUser = (user) => ({ type: 'SET_USER', user })\nconst _setNetflixUser = (nicknameLogin) => ({ type: 'SET_NETFLIX_USER', nicknameLogin })\n// Dispatchers\n//THANK\nexport function loadUsers(netflixId) {\n    return (dispatch) => {\n        try {\n            console.log('NETFLIXiD is:', netflixId.id);\n            const users = userService.getUsers(netflixId)\n            console.log('users is:', users);\n            dispatch(_setUsers(users))\n        }\n        catch (err) {\n            console.log('catch to get users!', err);\n        }\n    }\n}\n\nexport function getUser(userId) {\n    return (dispatch) => {\n        const user = userService.getUser(userId)\n        dispatch(_getUser(user))\n    }\n}\n\nexport function setUser(userId) {\n    return (dispatch) => {\n        const user = userService.getUser(userId)\n        storageService.saveToStorage('User', user)\n        dispatch(_setUser(user))\n    }\n}\n\nexport function setNetflixUser(user) {\n    console.log('user444 is:', user);\n    return async dispatch => {\n        const nicknameLogin = await LoginService.doLogin(user)\n        console.log('netflixUser is:', nicknameLogin);\n        dispatch(_setNetflixUser(nicknameLogin))\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}