{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/src/pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Banner } from '../cmps/Banner.jsx';\nimport { MoveiList } from '../cmps/MoveiList.jsx';\nimport { NavBar } from '../cmps/NavBar.jsx';\nimport { ModalMovie } from '../cmps/ModalMovie';\nimport { moveiService } from '../services/movieService';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Home() {\n  _s();\n\n  const {\n    filterBy\n  } = useSelector(state => state.userModule);\n  const [movieModal, setMovieModal] = useState({});\n  const [openModal, setOpenModal] = useState(false);\n  const [requests, setRequests] = useState([]);\n  useEffect(() => {\n    getRequests();\n  }, []);\n\n  function getRequests() {\n    const requests = moveiService.getRequests();\n    setRequests(requests);\n  }\n\n  async function getMovies(title, url, filterBy) {\n    const movies = await moveiService.getMovies(title, url);\n    return movies;\n  }\n\n  async function setFilterOnMovies(title, url) {\n    console.log(filterBy);\n    const movies = await moveiService.getMovies(title, url, filterBy);\n    console.log('movies is:', movies);\n  }\n\n  function toggleModal(movie) {\n    console.log('movie to modal is:', movie);\n    setMovieModal(movie);\n    setOpenModal(!openModal);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      setFilterOnMovies: setFilterOnMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bgc-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-container\",\n        children: requests.map((req, idx) => {\n          return /*#__PURE__*/_jsxDEV(MoveiList, {\n            idx: idx,\n            getMovies: getMovies,\n            toggleModal: toggleModal,\n            title: req.title,\n            requests: getMovies(req.title, req.url)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), openModal && /*#__PURE__*/_jsxDEV(ModalMovie, {\n      movie: movieModal,\n      setOpenModal: setOpenModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), openModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => toggleModal(false),\n      className: \"screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"ffgE+43zmveezYtHfmhTAKtEbBI=\", false, function () {\n  return [useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/pages/Home.jsx"],"names":["React","useEffect","useState","Banner","MoveiList","NavBar","ModalMovie","moveiService","useSelector","Home","filterBy","state","userModule","movieModal","setMovieModal","openModal","setOpenModal","requests","setRequests","getRequests","getMovies","title","url","movies","setFilterOnMovies","console","log","toggleModal","movie","map","req","idx"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Banner } from '../cmps/Banner.jsx'\nimport { MoveiList } from '../cmps/MoveiList.jsx'\nimport { NavBar } from '../cmps/NavBar.jsx'\nimport { ModalMovie } from '../cmps/ModalMovie'\nimport { moveiService } from '../services/movieService'\nimport { useSelector } from 'react-redux'\n\nexport function Home() {\n\n    const { filterBy } = useSelector(state => state.userModule)\n    const [movieModal, setMovieModal] = useState({})\n    const [openModal, setOpenModal] = useState(false)\n    const [requests, setRequests] = useState([])\n\n\n    useEffect(() => {\n        getRequests()\n    }, [])\n\n    function getRequests() {\n        const requests = moveiService.getRequests()\n        setRequests(requests)\n    }\n\n    async function getMovies(title, url, filterBy) {\n\n        const movies = await moveiService.getMovies(title, url)\n        return movies\n\n\n    }\n\n    async function setFilterOnMovies(title, url) {\n        console.log(filterBy);\n\n        const movies = await moveiService.getMovies(title, url, filterBy)\n        console.log('movies is:', movies);\n\n    }\n\n    function toggleModal(movie) {\n        console.log('movie to modal is:', movie);\n        setMovieModal(movie)\n        setOpenModal(!openModal)\n    }\n\n    return (\n        <div className=\"home-page\">\n            <NavBar setFilterOnMovies={setFilterOnMovies} />\n            <div >\n                <Banner />\n                <div className=\"bgc-black\">\n                </div>\n                <div className=\"row-container\">\n                    {requests.map((req, idx) => {\n                        return <MoveiList\n                            key={idx}\n                            idx={idx}\n                            getMovies={getMovies}\n                            toggleModal={toggleModal}\n                            title={req.title}\n                            requests={getMovies(req.title, req.url)}\n                        />\n                    })}\n                </div>\n\n            </div>\n\n            {openModal &&\n                <ModalMovie movie={movieModal} setOpenModal={setOpenModal} />\n            }\n            {openModal && <div onClick={() => toggleModal(false)} className=\"screen\"></div>}\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}