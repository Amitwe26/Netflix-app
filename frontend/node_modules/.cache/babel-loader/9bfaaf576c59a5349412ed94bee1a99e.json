{"ast":null,"code":"import blue from '../assets/img/blue.png';\nimport red from '../assets/img/red.png';\nimport yellow from '../assets/img/yellow.png';\nimport green from '../assets/img/green.png';\nconst users = [{\n  nickname: 'weiss',\n  profiles: [{\n    _id: 101,\n    name: 'Amit',\n    movies: [],\n    age: 24,\n    color: red\n  }, {\n    _id: 102,\n    name: 'Maor',\n    movies: [],\n    age: 35,\n    color: yellow\n  }, {\n    _id: 103,\n    name: 'Idan',\n    movies: [],\n    age: 31,\n    color: blue\n  }, {\n    _id: 104,\n    name: 'Inbal',\n    movies: [],\n    age: 38,\n    color: green\n  }]\n}, {\n  nickname: 'san',\n  profiles: [{\n    _id: 201,\n    name: 'Shany',\n    movies: [],\n    age: 19,\n    color: red\n  }, {\n    _id: 202,\n    name: 'Dvir',\n    movies: [],\n    age: 14,\n    color: yellow\n  }, {\n    _id: 203,\n    name: 'Tomer',\n    movies: [],\n    age: 8.5,\n    color: blue\n  }, {\n    _id: 204,\n    name: 'Rotem',\n    movies: [],\n    age: 24,\n    color: green\n  }]\n}];\n\nfunction getProfiles(nickname) {\n  const profilesToUser = users.filter(user => user.nickname === nickname);\n  return Promise.resolve(profilesToUser);\n}\n\nasync function getUser(info) {\n  console.log('profileId is:', info, users);\n  const {\n    userId,\n    nicknameUser\n  } = info;\n  const idx = users.findIndex(user => user.nickname === nicknameUser);\n  const profile = users[idx].profiles.find(profile => profile._id === userId);\n  console.log(' profileis:', profile);\n  return profile;\n}\n\nfunction _makeId(length = 5) {\n  var text = \"\";\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (var i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n}\n\nexport const userService = {\n  getProfiles,\n  getUser,\n  _makeId\n};","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/services/usersService.js"],"names":["blue","red","yellow","green","users","nickname","profiles","_id","name","movies","age","color","getProfiles","profilesToUser","filter","user","Promise","resolve","getUser","info","console","log","userId","nicknameUser","idx","findIndex","profile","find","_makeId","length","text","possible","i","charAt","Math","floor","random","userService"],"mappings":"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","sourcesContent":["import blue from '../assets/img/blue.png'\nimport red from '../assets/img/red.png'\nimport yellow from '../assets/img/yellow.png'\nimport green from '../assets/img/green.png'\n\nconst users = [\n    {\n        nickname: 'weiss',\n        profiles: [\n            { _id: 101, name: 'Amit', movies: [], age: 24, color: red },\n            { _id: 102, name: 'Maor', movies: [], age: 35, color: yellow },\n            { _id: 103, name: 'Idan', movies: [], age: 31, color: blue },\n            { _id: 104, name: 'Inbal', movies: [], age: 38, color: green }]\n    },\n    {\n        nickname: 'san',\n        profiles: [\n            { _id: 201, name: 'Shany', movies: [], age: 19, color: red },\n            { _id: 202, name: 'Dvir', movies: [], age: 14, color: yellow },\n            { _id: 203, name: 'Tomer', movies: [], age: 8.5, color: blue },\n            { _id: 204, name: 'Rotem', movies: [], age: 24, color: green }]\n    }]\n\nfunction getProfiles(nickname) {\n    const profilesToUser = users.filter(user => user.nickname === nickname)\n    return Promise.resolve(profilesToUser)\n}\nasync function getUser(info) {\n    console.log('profileId is:', info, users);\n    const { userId, nicknameUser } = info\n    const idx = users.findIndex(user => user.nickname === nicknameUser)\n    const profile = users[idx].profiles.find(profile => profile._id === userId)\n\n    console.log(' profileis:', profile);\n    return profile\n}\nfunction _makeId(length = 5) {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\nexport const userService = {\n    getProfiles,\n    getUser,\n    _makeId\n}"]},"metadata":{},"sourceType":"module"}