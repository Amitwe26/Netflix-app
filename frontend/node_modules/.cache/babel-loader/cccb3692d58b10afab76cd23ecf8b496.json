{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/src/cmps/MoveiList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/original';\nexport function MoveiList({\n  title,\n  requests,\n  toggleModal\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [highRow, sethigtRow] = useState(false);\n  useEffect(async () => {\n    console.log('props.key is:', props.key);\n    key === 0 || key === 3 ? sethigtRow(true) : sethigtRow(false);\n    const movies = await requests;\n    setMovies(movies);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-movie\",\n      children: movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => toggleModal(movie.id),\n          className: `${highRow ? 'highRow' : 'lowerRow'}`,\n          src: `${BASE_URL_IMG}${highRow ? movie.poster_path : movie.backdrop_path}`,\n          alt: \"\"\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoveiList, \"6kq3XHBOfxMlU79Mt61ftIdaf00=\");\n\n_c = MoveiList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoveiList\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/cmps/MoveiList.jsx"],"names":["React","useEffect","useState","BASE_URL_IMG","MoveiList","title","requests","toggleModal","movies","setMovies","highRow","sethigtRow","console","log","props","key","map","movie","id","poster_path","backdrop_path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,YAAY,GAAG,qCAArB;AAGA,OAAO,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAnB,EAAqD;AAAA;;AACxD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AAClBW,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,KAAK,CAACC,GAAnC;AACCA,IAAAA,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,CAAtB,GAA2BJ,UAAU,CAAC,IAAD,CAArC,GAA8CA,UAAU,CAAC,KAAD,CAAxD;AACA,UAAMH,MAAM,GAAG,MAAMF,QAArB;AACAG,IAAAA,SAAS,CAACD,MAAD,CAAT;AACH,GALQ,EAKN,EALM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAA,gBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKG,MAAM,CAACQ,GAAP,CAAWC,KAAK,IAAI;AACjB,4BAAO;AAEH,UAAA,OAAO,EAAE,MAAMV,WAAW,CAACU,KAAK,CAACC,EAAP,CAFvB;AAGH,UAAA,SAAS,EAAG,GAAER,OAAO,GAAG,SAAH,GAAe,UAAW,EAH5C;AAIH,UAAA,GAAG,EAAG,GAAEP,YAAa,GAAEO,OAAO,GAAGO,KAAK,CAACE,WAAT,GAAuBF,KAAK,CAACG,aAAc,EAJtE;AAIyE,UAAA,GAAG,EAAC;AAJ7E,WACEH,KAAK,CAACC,EADR;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAzBed,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/original'\n\n\nexport function MoveiList({ title, requests, toggleModal }) {\n    const [movies, setMovies] = useState([])\n    const [highRow, sethigtRow] = useState(false)\n\n    useEffect(async () => {\n        console.log('props.key is:', props.key);\n        (key === 0 || key === 3) ? sethigtRow(true) : sethigtRow(false)\n        const movies = await requests\n        setMovies(movies)\n    }, [])\n\n    return (\n        <div className=\"row-container\">\n            <p>{title}</p>\n            <div className=\"row-movie\">\n                {movies.map(movie => {\n                    return <img\n                        key={movie.id}\n                        onClick={() => toggleModal(movie.id)}\n                        className={`${highRow ? 'highRow' : 'lowerRow'}`}\n                        src={`${BASE_URL_IMG}${highRow ? movie.poster_path : movie.backdrop_path}`} alt=\"\" />\n                })}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}