{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/src/pages/Profiles.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { userService } from '../services/usersService';\nimport blue from '../assets/img/blue.png';\nimport red from '../assets/img/red.png';\nimport yellow from '../assets/img/yellow.png';\nimport green from '../assets/img/green.png';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Profiles() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [edit, setEdit] = useState(false);\n  useEffect(async () => {\n    const users = await userService.getUsers(); // setUsers(users)\n  }, []);\n  useEffect(() => {\n    console.log('edit is:', edit);\n  }, [edit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"nav-logo\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"How watch in Netflix?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-users\",\n        children: users.map((user, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/user\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: blue,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this), edit && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-edit\",\n                children: \"\\u270E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: edit ? '#ffff' : '',\n          color: edit ? 'black' : ''\n        },\n        onClick: () => setEdit(!edit),\n        children: edit ? 'Done' : 'Edit profile'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profiles, \"v0guHWiXFtOBNgAAtMEXAQubwoo=\");\n\n_c = Profiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/pages/Profiles.jsx"],"names":["React","useEffect","useState","userService","blue","red","yellow","green","Link","Profiles","users","setUsers","edit","setEdit","getUsers","console","log","map","user","idx","name","backgroundColor","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMS,KAAK,GAAG,MAAMP,WAAW,CAACW,QAAZ,EAApB,CADkB,CAElB;AACH,GAHQ,EAGN,EAHM,CAAT;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,IAAxB;AAEH,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAC,2EAA9B;AAA0G,MAAA,GAAG,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACKF,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,KAAe;AACtB,8BAAO;AACH,YAAA,SAAS,EAAC,MADP;AAAA,mCAGH,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,OAAT;AAAA,sCAEI;AAAK,gBAAA,GAAG,EAAEf,IAAV;AAAgB,gBAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGKQ,IAAI,iBAAI;AAAQ,gBAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHb,eAII;AAAA,0BAAIM,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHG,aAEED,GAFF;AAAA;AAAA;AAAA;AAAA,kBAAP;AAUH,SAXA;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ,eAiBI;AACI,QAAA,KAAK,EAAE;AACHE,UAAAA,eAAe,EAAET,IAAI,GAAG,OAAH,GAAa,EAD/B;AAEHU,UAAAA,KAAK,EAAEV,IAAI,GAAG,OAAH,GAAa;AAFrB,SADX;AAKI,QAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,CAACD,IAAF,CAL1B;AAAA,kBAMKA,IAAI,GAAG,MAAH,GAAY;AANrB;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GA5CeH,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { userService } from '../services/usersService'\nimport blue from '../assets/img/blue.png'\nimport red from '../assets/img/red.png'\nimport yellow from '../assets/img/yellow.png'\nimport green from '../assets/img/green.png'\nimport { Link } from 'react-router-dom'\n\nexport function Profiles() {\n    const [users, setUsers] = useState([])\n    const [edit, setEdit] = useState(false)\n\n    useEffect(async () => {\n        const users = await userService.getUsers()\n        // setUsers(users)\n    }, [])\n    useEffect(() => {\n        console.log('edit is:', edit);\n\n    }, [edit])\n\n    return (\n        <div className=\"profile-page\">\n            <img className=\"nav-logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"\" />\n            <div className=\"main-profile\">\n                <h1>How watch in Netflix?</h1>\n\n                <div className=\"main-users\">\n                    {users.map((user, idx) => {\n                        return <div\n                            className=\"user\"\n                            key={idx}>\n                            <Link to=\"/user\">\n                                {/* <img src={require(`../assets/img/${user.color}.png`)} alt=\"\" /> */}\n                                <img src={blue} alt=\"\" />\n                                {edit && <button className=\"btn-edit\">âœŽ</button>}\n                                <p>{user.name}</p>\n                            </Link>\n                        </div>\n                    })}\n                </div>\n                <button\n                    style={{\n                        backgroundColor: edit ? '#ffff' : '',\n                        color: edit ? 'black' : ''\n                    }}\n                    onClick={() => setEdit(!edit)}>\n                    {edit ? 'Done' : 'Edit profile'}\n                </button>\n            </div>\n        </div >\n    )\n}\n"]},"metadata":{},"sourceType":"module"}