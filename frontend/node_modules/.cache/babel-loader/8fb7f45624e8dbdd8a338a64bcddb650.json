{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/src/cmps/MoveiList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setMovies } from '../store/actions/MovieAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/original';\nexport function MoveiList({\n  request,\n  toggleModal,\n  idx\n}) {\n  _s();\n\n  const {\n    movies\n  } = useSelector(state => state.moviesModule);\n  const {\n    filterBy\n  } = useSelector(state => state.userModule);\n  const dispatch = useDispatch(); // const [movies, setMovies] = useState([])\n\n  const [highRow, sethigtRow] = useState(false); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useEffect(async () => {\n    getMovies()(idx === 0 || idx === 3) ? sethigtRow(true) : sethigtRow(false); // const movies = await request\n    // setMovies(movies)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {// getMovies(requests.title, requests.url, filterBy.Name)\n  }, [filterBy]);\n\n  function getMovies() {\n    const {\n      title,\n      url\n    } = request;\n    dispatch(setMovies(title, url));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: request.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-movie\",\n      children: movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => toggleModal(movie),\n          className: `${highRow ? 'highRow' : 'lowerRow'}`,\n          src: `${BASE_URL_IMG}${highRow ? movie.poster_path : movie.backdrop_path}`,\n          alt: \"\"\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoveiList, \"QwL2zCJpH/K2CjAH7CE1TS6xSDo=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = MoveiList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoveiList\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/cmps/MoveiList.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","setMovies","BASE_URL_IMG","MoveiList","request","toggleModal","idx","movies","state","moviesModule","filterBy","userModule","dispatch","highRow","sethigtRow","getMovies","title","url","map","movie","poster_path","backdrop_path","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,8BAA1B;;AAEA,MAAMC,YAAY,GAAG,qCAArB;AAGA,OAAO,SAASC,SAAT,CAAmB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA;AAAxB,CAAnB,EAAkD;AAAA;;AAErD,QAAM;AAAEC,IAAAA;AAAF,MAAaP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,YAAhB,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeV,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACG,UAAhB,CAAhC;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B,CAJqD,CAMrD;;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC,CAPqD,CASrD;;AACAD,EAAAA,SAAS,CAAC,YAAY;AAClBkB,IAAAA,SAAS,GACJT,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,CADjB,CAAT,GAC+BQ,UAAU,CAAC,IAAD,CADzC,GACkDA,UAAU,CAAC,KAAD,CAD5D,CADkB,CAGlB;AACA;AACA;AACH,GANQ,EAMN,EANM,CAAT;AAQAjB,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,CAACa,QAAD,CAFM,CAAT;;AAIA,WAASK,SAAT,GAAqB;AACjB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiBb,OAAvB;AACAQ,IAAAA,QAAQ,CAACX,SAAS,CAACe,KAAD,EAAQC,GAAR,CAAV,CAAR;AACH;;AAED,sBACI;AAAA,4BACI;AAAA,gBAAIb,OAAO,CAACY;AAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKT,MAAM,CAACW,GAAP,CAAWC,KAAK,IAAI;AACjB,4BAAO;AAEH,UAAA,OAAO,EAAE,MAAMd,WAAW,CAACc,KAAD,CAFvB;AAGH,UAAA,SAAS,EAAG,GAAEN,OAAO,GAAG,SAAH,GAAe,UAAW,EAH5C;AAIH,UAAA,GAAG,EAAG,GAAEX,YAAa,GAAEW,OAAO,GAAGM,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aAAc,EAJtE;AAIyE,UAAA,GAAG,EAAC;AAJ7E,WACEF,KAAK,CAACG,EADR;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAzCenB,S;UAEOH,W,EACEA,W,EACJD,W;;;KAJLI,S","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setMovies } from '../store/actions/MovieAction'\n\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/original'\n\n\nexport function MoveiList({ request, toggleModal, idx }) {\n\n    const { movies } = useSelector(state => state.moviesModule)\n    const { filterBy } = useSelector(state => state.userModule)\n    const dispatch = useDispatch()\n\n    // const [movies, setMovies] = useState([])\n    const [highRow, sethigtRow] = useState(false)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(async () => {\n        getMovies()\n            (idx === 0 || idx === 3) ? sethigtRow(true) : sethigtRow(false)\n        // const movies = await request\n        // setMovies(movies)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        // getMovies(requests.title, requests.url, filterBy.Name)\n    }, [filterBy])\n\n    function getMovies() {\n        const { title, url } = request\n        dispatch(setMovies(title, url))\n    }\n\n    return (\n        <div >\n            <p>{request.title}</p>\n            <div className=\"row-movie\">\n                {movies.map(movie => {\n                    return <img\n                        key={movie.id}\n                        onClick={() => toggleModal(movie)}\n                        className={`${highRow ? 'highRow' : 'lowerRow'}`}\n                        src={`${BASE_URL_IMG}${highRow ? movie.poster_path : movie.backdrop_path}`} alt=\"\" />\n                })}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}