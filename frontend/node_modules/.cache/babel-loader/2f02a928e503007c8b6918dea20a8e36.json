{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/frontend/src/pages/Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Banner } from '../cmps/Banner';\nimport { ModalMovie } from '../cmps/ModalMovie';\nimport { MoveiList } from '../cmps/MoveiList';\nimport { moveiService } from '../services/movieService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Movies() {\n  _s();\n\n  const [moviesList, setMoviesList] = useState([]);\n  const [movieModal, setMovieModal] = useState({});\n  const [openModal, setOpenModal] = useState(false);\n  useEffect(() => {\n    filterRequests();\n  }, []);\n\n  async function filterRequests() {\n    const requests = await moveiService.getRequests();\n    console.log('requests is:', requests);\n    const moviesList = requests.filter(req => {\n      return req.url.includes('/movie');\n    });\n    console.log('tvList is:', moviesList);\n    setMoviesList(moviesList);\n  }\n\n  function toggleModal(movie) {\n    setMovieModal(movie);\n    setOpenModal(!openModal);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      type: 'movie'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-container\",\n      children: [moviesList.map((tvMovie, idx) => {\n        return /*#__PURE__*/_jsxDEV(MoveiList, {\n          idx: idx,\n          toggleModal: toggleModal,\n          request: tvMovie\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 28\n        }, this);\n      }), openModal && /*#__PURE__*/_jsxDEV(ModalMovie, {\n        movie: movieModal,\n        setOpenModal: setOpenModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), openModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => toggleModal(false),\n        className: \"screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"Egl1x5v0BKg/jk6mUBQ1atnPzLo=\");\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/frontend/src/pages/Movies.jsx"],"names":["React","useEffect","useState","Banner","ModalMovie","MoveiList","moveiService","Movies","moviesList","setMoviesList","movieModal","setMovieModal","openModal","setOpenModal","filterRequests","requests","getRequests","console","log","filter","req","url","includes","toggleModal","movie","map","tvMovie","idx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AACrB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,cAAf,GAAgC;AAC5B,UAAMC,QAAQ,GAAG,MAAMT,YAAY,CAACU,WAAb,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,QAA5B;AACA,UAAMP,UAAU,GAAGO,QAAQ,CAACI,MAAT,CAAgBC,GAAG,IAAI;AACtC,aAAOA,GAAG,CAACC,GAAJ,CAAQC,QAAR,CAAiB,QAAjB,CAAP;AAEH,KAHkB,CAAnB;AAIAL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BV,UAA1B;AACAC,IAAAA,aAAa,CAACD,UAAD,CAAb;AACH;;AAED,WAASe,WAAT,CAAqBC,KAArB,EAA4B;AACxBb,IAAAA,aAAa,CAACa,KAAD,CAAb;AACAX,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH;;AACD,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACKJ,UAAU,CAACiB,GAAX,CAAe,CAACC,OAAD,EAAUC,GAAV,KAAkB;AAC9B,4BAAO,QAAC,SAAD;AAEH,UAAA,GAAG,EAAEA,GAFF;AAGH,UAAA,WAAW,EAAEJ,WAHV;AAIH,UAAA,OAAO,EAAEG;AAJN,WACEC,GADF;AAAA;AAAA;AAAA;AAAA,gBAAP;AAMH,OAPA,CADL,EASKf,SAAS,iBACN,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEF,UAAnB;AAA+B,QAAA,YAAY,EAAEG;AAA7C;AAAA;AAAA;AAAA;AAAA,cAVR,EAYKD,SAAS,iBAAI;AAAK,QAAA,OAAO,EAAE,MAAMW,WAAW,CAAC,KAAD,CAA/B;AAAwC,QAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,cAZlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GA1CehB,M;;KAAAA,M","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Banner } from '../cmps/Banner'\nimport { ModalMovie } from '../cmps/ModalMovie'\nimport { MoveiList } from '../cmps/MoveiList'\nimport { moveiService } from '../services/movieService'\n\nexport function Movies() {\n    const [moviesList, setMoviesList] = useState([])\n    const [movieModal, setMovieModal] = useState({})\n    const [openModal, setOpenModal] = useState(false)\n    useEffect(() => {\n        filterRequests()\n    }, [])\n\n    async function filterRequests() {\n        const requests = await moveiService.getRequests()\n        console.log('requests is:', requests);\n        const moviesList = requests.filter(req => {\n            return req.url.includes('/movie')\n\n        })\n        console.log('tvList is:', moviesList);\n        setMoviesList(moviesList)\n    }\n\n    function toggleModal(movie) {\n        setMovieModal(movie)\n        setOpenModal(!openModal)\n    }\n    return (\n        <div>\n            <Banner type={'movie'} />\n            <div className=\"row-container\">\n                {moviesList.map((tvMovie, idx) => {\n                    return <MoveiList\n                        key={idx}\n                        idx={idx}\n                        toggleModal={toggleModal}\n                        request={tvMovie}\n                    />\n                })}\n                {openModal &&\n                    <ModalMovie movie={movieModal} setOpenModal={setOpenModal} />\n                }\n                {openModal && <div onClick={() => toggleModal(false)} className=\"screen\"></div>}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}