{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/frontend/src/pages/NetflixApp.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Home } from './Home';\nimport { Profiles } from './Profiles';\nimport { Register } from './Register';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { TvShow } from './TvShow';\nimport { Movies } from './Movies'; // import { NavBar } from '../cmps/NavBar';\n// import { useDispatch } from 'react-redux';\n// import { setProfile } from '../store/actions/UserAction';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NetflixApp() {\n  // const dispatch = useDispatch()\n  // const [user, setUser] = useState(false)\n  // useEffect(() => {\n  //     chackIfSessionUser()\n  // }, [])\n  // function chackIfSessionUser() {\n  //     const user = sessionStorage.loggedinUser\n  //     console.log('user from sess is:', user);\n  //     if (user) {\n  //         console.log('im in');\n  //         setUser(true)\n  //     } else {\n  //         console.log('im else');\n  //     }\n  // }\n  // function onChangeProfile(profile) {\n  //     dispatch(setProfile(profile))\n  // }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"netflix-app\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile/:id/tv-show\",\n          component: TvShow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile/:id/movies\",\n          component: Movies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile/:id\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user\",\n          component: Profiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          component: Register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_c = NetflixApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetflixApp\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/frontend/src/pages/NetflixApp.jsx"],"names":["React","useEffect","useState","Home","Profiles","Register","BrowserRouter","Router","Switch","Route","TvShow","Movies","NetflixApp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,QAIO,kBAJP;AAKA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB,C,CACA;AACA;AACA;;;AAGA,eAAe,SAASC,UAAT,GAAsB;AACjC;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA,sBACI,QAAC,MAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BAII,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,sBAAZ;AAAmC,UAAA,SAAS,EAAEF;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,qBAAZ;AAAkC,UAAA,SAAS,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,cAAZ;AAA2B,UAAA,SAAS,EAAER;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,SAAS,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;KA3CuBO,U","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Home } from './Home'\nimport { Profiles } from './Profiles'\nimport { Register } from './Register'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport { TvShow } from './TvShow';\nimport { Movies } from './Movies';\n// import { NavBar } from '../cmps/NavBar';\n// import { useDispatch } from 'react-redux';\n// import { setProfile } from '../store/actions/UserAction';\n\n\nexport default function NetflixApp() {\n    // const dispatch = useDispatch()\n    // const [user, setUser] = useState(false)\n\n    // useEffect(() => {\n    //     chackIfSessionUser()\n    // }, [])\n\n    // function chackIfSessionUser() {\n    //     const user = sessionStorage.loggedinUser\n    //     console.log('user from sess is:', user);\n    //     if (user) {\n    //         console.log('im in');\n    //         setUser(true)\n    //     } else {\n    //         console.log('im else');\n    //     }\n    // }\n\n    // function onChangeProfile(profile) {\n    //     dispatch(setProfile(profile))\n\n    // }\n\n    return (\n        <Router>\n            <div className=\"netflix-app\">\n                {/* {user && <NavBar onChangeProfile={onChangeProfile} />} */}\n\n                {/* {netflixId && */}\n                <Switch>\n                    <Route path=\"/profile/:id/tv-show\" component={TvShow} />\n                    <Route path=\"/profile/:id/movies\" component={Movies} />\n                    <Route path=\"/profile/:id\" component={Home} />\n                    <Route path=\"/user\" component={Profiles} />\n                    <Route path=\"/\" component={Register} />\n                </Switch>\n                {/* } */}\n\n            </div>\n        </Router>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}