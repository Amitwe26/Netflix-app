{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/src/cmps/FilterMovie.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useRef } from 'react';\nimport moviesReducer from '../store/reducers/MoviesReducer';\nimport { initialstate } from '../store/reducers/MoviesReducer'; // const initialstate = {\n//     filterByName: null\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FilterMovie() {\n  _s();\n\n  const inputRef = useRef(null);\n  const [state, dispatch] = useReducer(moviesReducer, initialstate);\n  useEffect(() => {\n    inputRef.current.focus();\n    console.log('state is:', state);\n  }, []);\n  useEffect(() => {// console.log('filterByName is:', state.filterByName);\n  }, [state]); // const { filterByName } = state\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      className: \"filterMovies\",\n      type: \"text\",\n      onChange: ev => dispatch({\n        type: 'FILTER_BY',\n        filterByName: ev.target.value\n      }),\n      placeholder: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FilterMovie, \"jO+ARypjDaOMs+HZH1M/wLNolFg=\");\n\n_c = FilterMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterMovie\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/src/cmps/FilterMovie.jsx"],"names":["React","useEffect","useReducer","useRef","moviesReducer","initialstate","FilterMovie","inputRef","state","dispatch","current","focus","console","log","ev","type","filterByName","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,YAAT,QAA6B,iCAA7B,C,CACA;AACA;AACA;;;AACA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAC1B,QAAMC,QAAQ,GAAGJ,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBP,UAAU,CAACE,aAAD,EAAgBC,YAAhB,CAApC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,KAAzB;AACH,GAHQ,EAGN,EAHM,CAAT;AAIAP,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,CAACO,KAAD,CAFM,CAAT,CAR0B,CAY1B;;AACA,sBACI;AAAA,2BACI;AAAO,MAAA,GAAG,EAAED,QAAZ;AAAsB,MAAA,SAAS,EAAC,cAAhC;AAA+C,MAAA,IAAI,EAAC,MAApD;AAA2D,MAAA,QAAQ,EAAGO,EAAD,IAAQL,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,YAAY,EAAEF,EAAE,CAACG,MAAH,CAAUC;AAA7C,OAAD,CAArF;AAA6I,MAAA,WAAW,EAAC;AAAzJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAnBeZ,W;;KAAAA,W","sourcesContent":["import React, { useEffect, useReducer, useRef } from 'react'\nimport moviesReducer from '../store/reducers/MoviesReducer'\nimport { initialstate } from '../store/reducers/MoviesReducer'\n// const initialstate = {\n//     filterByName: null\n// }\nexport function FilterMovie() {\n    const inputRef = useRef(null)\n    const [state, dispatch] = useReducer(moviesReducer, initialstate)\n\n    useEffect(() => {\n        inputRef.current.focus()\n        console.log('state is:', state);\n    }, [])\n    useEffect(() => {\n        // console.log('filterByName is:', state.filterByName);\n    }, [state])\n\n    // const { filterByName } = state\n    return (\n        <div>\n            <input ref={inputRef} className=\"filterMovies\" type=\"text\" onChange={(ev) => dispatch({ type: 'FILTER_BY', filterByName: ev.target.value })} placeholder=\"search\" />\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}