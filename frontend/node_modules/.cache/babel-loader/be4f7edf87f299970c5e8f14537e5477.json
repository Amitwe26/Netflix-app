{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/netflix-app/frontend/src/cmps/NavBar.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/alt-text */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { storageService } from '../services/storageService';\nimport { setFilter } from '../store/actions/MovieAction'; // import { setFilter } from '../store/actions/MovieAction'\n\nimport { FilterMovie } from './FilterMovie';\nimport { UsersModal } from './UsersModal';\nimport blue from '../assets/img/blue.png';\nimport red from '../assets/img/red.png';\nimport yellow from '../assets/img/yellow.png';\nimport green from '../assets/img/green.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NavBar({\n  onChangeProfile\n}) {\n  _s();\n\n  const {\n    user,\n    profile,\n    profiles\n  } = useSelector(state => state.userModule);\n  const [profilesWithFilter, setProfilesWithFilter] = useState([]);\n  const [profileFromStorge, setProfileFromStorge] = useState({});\n  const [profilesFromStorge, setProfilesFromStorge] = useState([]);\n  const dispatch = useDispatch();\n  const [scroll, setscroll] = useState(false);\n  const [profilesModal, setProfilesModal] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    window.addEventListener('scroll', showNav);\n    return () => window.removeEventListener('scroll', showNav);\n  }, []);\n  useEffect(() => {\n    const profileFromStorge = storageService.loadFromStorage('profile');\n    const profilesFromStorge = storageService.loadFromStorage('profiles');\n    setProfileFromStorge(profileFromStorge);\n    setProfilesFromStorge(profilesFromStorge);\n  }, [profiles, user]);\n  useEffect(() => {}, [profile]);\n\n  const filterProfiles = profileId => {\n    // if (!profileId) {\n    //     const newProfiles = profilesFromStorge.filter(profile => profile.id !== profileFromStorge)\n    //     return newProfiles\n    // } else {\n    const newProfiles = profilesFromStorge.filter(profile => profile.id !== profileId);\n    return newProfiles; // }\n  };\n\n  const showNav = () => {\n    if (window.scrollY > 30) setscroll(true);else setscroll(false);\n  };\n\n  const openModal = profileId => {\n    console.log('profileId is:', profileId);\n\n    if (!profileId) {\n      console.log('profilesFromStorge is:', profileFromStorge);\n      const usersWithFilter = filterProfiles(profileFromStorge.id);\n      setProfilesWithFilter(usersWithFilter);\n    } else {\n      const usersWithFilter = filterProfiles(profileId);\n      setProfilesWithFilter(usersWithFilter);\n    }\n\n    setProfilesModal(!profilesModal);\n  };\n\n  function setAvatarPicture(color) {\n    if (color === 'Blue') {\n      return blue;\n    }\n\n    if (color === 'Yellow') {\n      return yellow;\n    }\n\n    if (color === 'Red') {\n      return red;\n    }\n\n    if (color === 'Green') {\n      return green;\n    }\n  }\n\n  function changeProfile(profile) {\n    onChangeProfile(profile);\n    setProfilesModal(false);\n  }\n\n  const onSetFilter = filterBy => dispatch(setFilter(filterBy)); // const onSetFilter = (filterBy) => {\n  //     dispatch(setFilter(filterBy))\n  // setFilterOnMovies(filterBy)\n  // }\n  //\n  // function toggleHoverMouse() {\n  //     console.log('amit is:');\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `nav-bar ${scroll ? 'nav-black' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => history.push('/user'),\n          className: \"nav-logo\",\n          src: \"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \" Home page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/profile/:id/tv-show\",\n          children: \" TV shows \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \" Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \" News & Popular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \" My list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex align-center right-nav\",\n        onClick: () => openModal(profile.id),\n        children: [/*#__PURE__*/_jsxDEV(FilterMovie, {\n          onSetFilter: onSetFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          // onMouseEnter={() => setUsersModal(!usersModal)}\n          // onMouseOut={() => toggleHoverMouse(false)}\n          className: \"user-avatar\",\n          src: setAvatarPicture((profile === null || profile === void 0 ? void 0 : profile.color) || profileFromStorge.color),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setProfilesModal(!profilesModal),\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), profilesModal && /*#__PURE__*/_jsxDEV(UsersModal, {\n        profiles: profilesWithFilter,\n        setAvatarPicture: setAvatarPicture,\n        changeProfile: changeProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 35\n      }, this), profilesModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setProfilesModal(false),\n        className: \"screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NavBar, \"Cy6n7H6vjZ2kuJTOxHZE2ieWN9s=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/netflix-app/frontend/src/cmps/NavBar.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","useHistory","storageService","setFilter","FilterMovie","UsersModal","blue","red","yellow","green","NavBar","onChangeProfile","user","profile","profiles","state","userModule","profilesWithFilter","setProfilesWithFilter","profileFromStorge","setProfileFromStorge","profilesFromStorge","setProfilesFromStorge","dispatch","scroll","setscroll","profilesModal","setProfilesModal","history","window","addEventListener","showNav","removeEventListener","loadFromStorage","filterProfiles","profileId","newProfiles","filter","id","scrollY","openModal","console","log","usersWithFilter","setAvatarPicture","color","changeProfile","onSetFilter","filterBy","push"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport { storageService } from '../services/storageService'\nimport { setFilter } from '../store/actions/MovieAction'\n// import { setFilter } from '../store/actions/MovieAction'\nimport { FilterMovie } from './FilterMovie'\nimport { UsersModal } from './UsersModal'\nimport blue from '../assets/img/blue.png'\nimport red from '../assets/img/red.png'\nimport yellow from '../assets/img/yellow.png'\nimport green from '../assets/img/green.png'\n\nexport function NavBar({ onChangeProfile }) {\n    const { user, profile, profiles } = useSelector(state => state.userModule)\n    const [profilesWithFilter, setProfilesWithFilter] = useState([])\n    const [profileFromStorge, setProfileFromStorge] = useState({})\n    const [profilesFromStorge, setProfilesFromStorge] = useState([])\n    const dispatch = useDispatch()\n\n    const [scroll, setscroll] = useState(false)\n    const [profilesModal, setProfilesModal] = useState(false)\n    const history = useHistory()\n\n    useEffect(() => {\n        window.addEventListener('scroll', showNav)\n        return () => window.removeEventListener('scroll', showNav)\n    }, [])\n\n    useEffect(() => {\n        const profileFromStorge = storageService.loadFromStorage('profile')\n        const profilesFromStorge = storageService.loadFromStorage('profiles')\n        setProfileFromStorge(profileFromStorge)\n        setProfilesFromStorge(profilesFromStorge)\n    }, [profiles, user])\n\n    useEffect(() => {\n    }, [profile])\n\n    const filterProfiles = (profileId) => {\n        // if (!profileId) {\n        //     const newProfiles = profilesFromStorge.filter(profile => profile.id !== profileFromStorge)\n        //     return newProfiles\n        // } else {\n        const newProfiles = profilesFromStorge.filter(profile => profile.id !== profileId)\n        return newProfiles\n        // }\n    }\n\n    const showNav = () => {\n        if (window.scrollY > 30) setscroll(true)\n        else setscroll(false)\n    }\n\n    const openModal = (profileId) => {\n        console.log('profileId is:', profileId);\n        if (!profileId) {\n            console.log('profilesFromStorge is:', profileFromStorge);\n            const usersWithFilter = filterProfiles(profileFromStorge.id)\n            setProfilesWithFilter(usersWithFilter)\n        } else {\n            const usersWithFilter = filterProfiles(profileId)\n            setProfilesWithFilter(usersWithFilter)\n        }\n        setProfilesModal(!profilesModal)\n    }\n\n    function setAvatarPicture(color) {\n        if (color === 'Blue') {\n            return blue\n        }\n        if (color === 'Yellow') {\n            return yellow\n        }\n        if (color === 'Red') {\n            return red\n        }\n        if (color === 'Green') {\n            return green\n        }\n    }\n    function changeProfile(profile) {\n        onChangeProfile(profile)\n        setProfilesModal(false)\n\n    }\n    const onSetFilter = filterBy => dispatch(setFilter(filterBy))\n    // const onSetFilter = (filterBy) => {\n    //     dispatch(setFilter(filterBy))\n    // setFilterOnMovies(filterBy)\n    // }\n    //\n    // function toggleHoverMouse() {\n    //     console.log('amit is:');\n    // }\n    return (\n        <div className={`nav-bar ${(scroll) ? 'nav-black' : ''}`}>\n            <div className=\"nav-content\">\n                <div className=\"left-nav\">\n                    <img\n                        onClick={() => history.push('/user')}\n                        className=\"nav-logo\"\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\n                        alt=\"\"\n                    />\n                    <a > Home page</a>\n                    <Link to=\"/profile/:id/tv-show\"> TV shows </Link>\n                    <a > Movies</a>\n                    <a > News & Popular</a>\n                    <a > My list</a>\n                </div>\n                <div className=\"flex align-center right-nav\" onClick={() => openModal(profile.id)}>\n                    <FilterMovie onSetFilter={onSetFilter} />\n                    <img\n\n                        // onMouseEnter={() => setUsersModal(!usersModal)}\n                        // onMouseOut={() => toggleHoverMouse(false)}\n                        className=\"user-avatar\"\n                        src={setAvatarPicture(profile?.color || profileFromStorge.color)}\n                        alt=\"\"\n                    />\n                    <span onClick={() => setProfilesModal(!profilesModal)}>▼</span>\n\n                </div>\n                {profilesModal && <UsersModal profiles={profilesWithFilter} setAvatarPicture={setAvatarPicture} changeProfile={changeProfile} />}\n                {profilesModal && <div onClick={() => setProfilesModal(false)} className=\"screen\"></div>}\n            </div>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}